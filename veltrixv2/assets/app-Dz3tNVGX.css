/*! tailwindcss v4.1.4 | MIT License | https://tailwindcss.com */

@layer properties {
    @supports (((-webkit-hyphens: none)) and (not (margin-trim:inline))) or ((-moz-orient:inline) and (not (color:rgb(from red r g b)))) {
        *, :before, :after, ::backdrop {
            --tw-translate-x:0;
            --tw-translate-y: 0;
            --tw-translate-z: 0;
            --tw-scale-x: 1;
            --tw-scale-y: 1;
            --tw-scale-z: 1;
            --tw-rotate-x: initial;
            --tw-rotate-y: initial;
            --tw-rotate-z: initial;
            --tw-skew-x: initial;
            --tw-skew-y: initial;
            --tw-space-y-reverse: 0;
            --tw-space-x-reverse: 0;
            --tw-divide-y-reverse: 0;
            --tw-border-style: solid;
            --tw-gradient-position: initial;
            --tw-gradient-from: #0000;
            --tw-gradient-via: #0000;
            --tw-gradient-to: #0000;
            --tw-gradient-stops: initial;
            --tw-gradient-via-stops: initial;
            --tw-gradient-from-position: 0%;
            --tw-gradient-via-position: 50%;
            --tw-gradient-to-position: 100%;
            --tw-leading: initial;
            --tw-font-weight: initial;
            --tw-tracking: initial;
            --tw-ordinal: initial;
            --tw-slashed-zero: initial;
            --tw-numeric-figure: initial;
            --tw-numeric-spacing: initial;
            --tw-numeric-fraction: initial;
            --tw-shadow: 0 0 #0000;
            --tw-shadow-color: initial;
            --tw-shadow-alpha: 100%;
            --tw-inset-shadow: 0 0 #0000;
            --tw-inset-shadow-color: initial;
            --tw-inset-shadow-alpha: 100%;
            --tw-ring-color: initial;
            --tw-ring-shadow: 0 0 #0000;
            --tw-inset-ring-color: initial;
            --tw-inset-ring-shadow: 0 0 #0000;
            --tw-ring-inset: initial;
            --tw-ring-offset-width: 0px;
            --tw-ring-offset-color: #fff;
            --tw-ring-offset-shadow: 0 0 #0000;
            --tw-outline-style: solid;
            --tw-blur: initial;
            --tw-brightness: initial;
            --tw-contrast: initial;
            --tw-grayscale: initial;
            --tw-hue-rotate: initial;
            --tw-invert: initial;
            --tw-opacity: initial;
            --tw-saturate: initial;
            --tw-sepia: initial;
            --tw-drop-shadow: initial;
            --tw-drop-shadow-color: initial;
            --tw-drop-shadow-alpha: 100%;
            --tw-drop-shadow-size: initial;
            --tw-backdrop-blur: initial;
            --tw-backdrop-brightness: initial;
            --tw-backdrop-contrast: initial;
            --tw-backdrop-grayscale: initial;
            --tw-backdrop-hue-rotate: initial;
            --tw-backdrop-invert: initial;
            --tw-backdrop-opacity: initial;
            --tw-backdrop-saturate: initial;
            --tw-backdrop-sepia: initial;
            --tw-duration: initial;
            --tw-ease: initial;
            --tw-content: ""
        }
    }
}

@layer theme {
    :root,
    :host {
        --font-sans: "Nunito", ui-sans-serif, system-ui, sans-serif;
        --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
        --color-red-100: oklch(93.6% .032 17.717);
        --color-red-200: oklch(88.5% .062 18.334);
        --color-red-300: oklch(80.8% .114 19.571);
        --color-red-400: oklch(70.4% .191 22.216);
        --color-red-500: oklch(63.7% .237 25.331);
        --color-red-600: oklch(57.7% .245 27.325);
        --color-red-700: oklch(50.5% .213 27.518);
        --color-red-800: oklch(44.4% .177 26.899);
        --color-red-900: oklch(39.6% .141 25.723);
        --color-orange-500: oklch(70.5% .213 47.604);
        --color-orange-700: oklch(55.3% .195 38.402);
        --color-yellow-100: oklch(97.3% .071 103.193);
        --color-yellow-300: oklch(90.5% .182 98.111);
        --color-yellow-500: oklch(79.5% .184 86.047);
        --color-yellow-600: oklch(68.1% .162 75.834);
        --color-yellow-700: oklch(55.4% .135 66.442);
        --color-green-100: oklch(96.2% .044 156.743);
        --color-green-200: oklch(92.5% .084 155.995);
        --color-green-300: oklch(87.1% .15 154.449);
        --color-green-500: oklch(72.3% .219 149.579);
        --color-green-600: oklch(62.7% .194 149.214);
        --color-green-700: oklch(52.7% .154 150.069);
        --color-green-800: oklch(44.8% .119 151.328);
        --color-green-900: oklch(39.3% .095 152.535);
        --color-teal-500: oklch(70.4% .14 182.503);
        --color-teal-600: oklch(60% .118 184.704);
        --color-teal-700: oklch(51.1% .096 186.391);
        --color-cyan-400: oklch(78.9% .154 211.53);
        --color-cyan-500: oklch(71.5% .143 215.221);
        --color-blue-400: oklch(70.7% .165 254.624);
        --color-blue-500: oklch(62.3% .214 259.815);
        --color-blue-600: oklch(54.6% .245 262.881);
        --color-blue-700: oklch(48.8% .243 264.376);
        --color-indigo-50: oklch(96.2% .018 272.314);
        --color-indigo-200: oklch(87% .065 274.039);
        --color-indigo-300: oklch(78.5% .115 274.713);
        --color-indigo-400: oklch(67.3% .182 276.935);
        --color-indigo-500: oklch(58.5% .233 277.117);
        --color-indigo-600: oklch(51.1% .262 276.966);
        --color-indigo-700: oklch(45.7% .24 277.023);
        --color-indigo-800: oklch(39.8% .195 277.366);
        --color-purple-50: oklch(97.7% .014 308.299);
        --color-purple-400: oklch(71.4% .203 305.504);
        --color-purple-500: oklch(62.7% .265 303.9);
        --color-purple-600: oklch(55.8% .288 302.321);
        --color-purple-700: oklch(49.6% .265 301.924);
        --color-pink-500: oklch(65.6% .241 354.308);
        --color-pink-600: oklch(59.2% .249 .584);
        --color-pink-700: oklch(52.5% .223 3.958);
        --color-gray-50: oklch(98.5% .002 247.839);
        --color-gray-100: oklch(96.7% .003 264.542);
        --color-gray-200: oklch(92.8% .006 264.531);
        --color-gray-300: oklch(87.2% .01 258.338);
        --color-gray-400: oklch(70.7% .022 261.325);
        --color-gray-500: oklch(55.1% .027 264.364);
        --color-gray-600: oklch(44.6% .03 256.802);
        --color-gray-700: oklch(37.3% .034 259.733);
        --color-gray-800: oklch(27.8% .033 256.848);
        --color-gray-900: oklch(21% .034 264.665);
        --color-gray-950: oklch(13% .028 261.692);
        --color-neutral-400: oklch(70.8% 0 0);
        --color-neutral-700: oklch(37.1% 0 0);
        --color-neutral-800: oklch(26.9% 0 0);
        --color-black: #000;
        --color-white: #fff;
        --spacing: .25rem;
        --container-md: 28rem;
        --container-3xl: 48rem;
        --container-5xl: 64rem;
        --container-7xl: 80rem;
        --text-xs: .75rem;
        --text-xs--line-height: calc(1/.75);
        --text-sm: .875rem;
        --text-sm--line-height: calc(1.25/.875);
        --text-lg: 1.125rem;
        --text-lg--line-height: calc(1.75/1.125);
        --text-xl: 1.25rem;
        --text-xl--line-height: calc(1.75/1.25);
        --text-2xl: 1.5rem;
        --text-2xl--line-height: calc(2/1.5);
        --text-3xl: 1.875rem;
        --text-3xl--line-height: 1.2;
        --text-4xl: 2.25rem;
        --text-4xl--line-height: calc(2.5/2.25);
        --text-5xl: 3rem;
        --text-5xl--line-height: 1;
        --text-6xl: 3.75rem;
        --text-6xl--line-height: 1;
        --font-weight-normal: 400;
        --font-weight-medium: 500;
        --font-weight-semibold: 600;
        --font-weight-bold: 700;
        --tracking-tight: -.025em;
        --tracking-wide: .025em;
        --tracking-wider: .05em;
        --leading-tight: 1.25;
        --leading-relaxed: 1.625;
        --radius-sm: .25rem;
        --radius-md: .375rem;
        --radius-lg: .5rem;
        --radius-xl: .75rem;
        --radius-2xl: 1rem;
        --radius-3xl: 1.5rem;
        --drop-shadow-lg: 0 4px 4px #00000026;
        --ease-in: cubic-bezier(.4, 0, 1, 1);
        --ease-out: cubic-bezier(0, 0, .2, 1);
        --ease-in-out: cubic-bezier(.4, 0, .2, 1);
        --animate-spin: spin 1s linear infinite;
        --animate-pulse: pulse 2s cubic-bezier(.4, 0, .6, 1)infinite;
        --blur-xs: 4px;
        --blur-sm: 8px;
        --blur-xl: 24px;
        --default-transition-duration: .15s;
        --default-transition-timing-function: cubic-bezier(.4, 0, .2, 1);
        --default-font-family: var(--font-sans);
        --default-mono-font-family: var(--font-mono);
        --color-primary: hsl(var(--color-primary));
        --color-secondary: hsl(var(--color-secondary));
        --color-neutral: hsl(var(--color-neutral));
        --color-base: hsl(var(--color-base));
        --color-muted: hsl(var(--color-muted));
        --color-inverted: hsl(var(--color-inverted));
        --color-success: hsl(var(--color-success));
        --color-error: hsl(var(--color-error));
        --color-warning: hsl(var(--color-warning));
        --color-inactive: hsl(var(--color-inactive));
        --color-info: hsl(var(--color-info));
        --color-background: hsl(var(--color-background));
        --color-background-secondary: hsl(var(--color-background-secondary))
    }
}

@layer base {
    *,
    :after,
    :before,
    ::backdrop {
        box-sizing: border-box;
        border: 0 solid;
        margin: 0;
        padding: 0
    }
    ::file-selector-button {
        box-sizing: border-box;
        border: 0 solid;
        margin: 0;
        padding: 0
    }
    html,
    :host {
        -webkit-text-size-adjust: 100%;
        -moz-tab-size: 4;
        tab-size: 4;
        line-height: 1.5;
        font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
        font-feature-settings: var(--default-font-feature-settings, normal);
        font-variation-settings: var(--default-font-variation-settings, normal);
        -webkit-tap-highlight-color: transparent
    }
    hr {
        height: 0;
        color: inherit;
        border-top-width: 1px
    }
    abbr:where([title]) {
        -webkit-text-decoration: underline dotted;
        text-decoration: underline dotted
    }
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        font-size: inherit;
        font-weight: inherit
    }
    a {
        color: inherit;
        -webkit-text-decoration: inherit;
        text-decoration: inherit
    }
    b,
    strong {
        font-weight: bolder
    }
    code,
    kbd,
    samp,
    pre {
        font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
        font-feature-settings: var(--default-mono-font-feature-settings, normal);
        font-variation-settings: var(--default-mono-font-variation-settings, normal);
        font-size: 1em
    }
    small {
        font-size: 80%
    }
    sub,
    sup {
        vertical-align: baseline;
        font-size: 75%;
        line-height: 0;
        position: relative
    }
    sub {
        bottom: -.25em
    }
    sup {
        top: -.5em
    }
    table {
        text-indent: 0;
        border-color: inherit;
        border-collapse: collapse
    }
    :-moz-focusring {
        outline: auto
    }
    progress {
        vertical-align: baseline
    }
    summary {
        display: list-item
    }
    ol,
    ul,
    menu {
        list-style: none
    }
    img,
    svg,
    video,
    canvas,
    audio,
    iframe,
    embed,
    object {
        vertical-align: middle;
        display: block
    }
    img,
    video {
        max-width: 100%;
        height: auto
    }
    button,
    input,
    select,
    optgroup,
    textarea {
        font: inherit;
        font-feature-settings: inherit;
        font-variation-settings: inherit;
        letter-spacing: inherit;
        color: inherit;
        opacity: 1;
        background-color: #0000;
        border-radius: 0
    }
    ::file-selector-button {
        font: inherit;
        font-feature-settings: inherit;
        font-variation-settings: inherit;
        letter-spacing: inherit;
        color: inherit;
        opacity: 1;
        background-color: #0000;
        border-radius: 0
    }
    :where(select:is([multiple], [size])) optgroup {
        font-weight: bolder
    }
    :where(select:is([multiple], [size])) optgroup option {
        padding-inline-start: 20px
    }
    ::file-selector-button {
        margin-inline-end: 4px
    }
    ::placeholder {
        opacity: 1
    }
    @supports (not ((-webkit-appearance:-apple-pay-button))) or (contain-intrinsic-size:1px) {
        ::placeholder {
            color: currentColor
        }
        @supports (color:color-mix(in lab, red, red)) {
            ::placeholder {
                color: color-mix(in oklab, currentcolor 50%, transparent)
            }
        }
    }
    textarea {
        resize: vertical
    }
    ::-webkit-search-decoration {
        -webkit-appearance: none
    }
    ::-webkit-date-and-time-value {
        min-height: 1lh;
        text-align: inherit
    }
    ::-webkit-datetime-edit {
        display: inline-flex
    }
    ::-webkit-datetime-edit-fields-wrapper {
        padding: 0
    }
    ::-webkit-datetime-edit {
        padding-block: 0
    }
    ::-webkit-datetime-edit-year-field {
        padding-block: 0
    }
    ::-webkit-datetime-edit-month-field {
        padding-block: 0
    }
    ::-webkit-datetime-edit-day-field {
        padding-block: 0
    }
    ::-webkit-datetime-edit-hour-field {
        padding-block: 0
    }
    ::-webkit-datetime-edit-minute-field {
        padding-block: 0
    }
    ::-webkit-datetime-edit-second-field {
        padding-block: 0
    }
    ::-webkit-datetime-edit-millisecond-field {
        padding-block: 0
    }
    ::-webkit-datetime-edit-meridiem-field {
        padding-block: 0
    }
    :-moz-ui-invalid {
        box-shadow: none
    }
    button,
    input:where([type=button], [type=reset], [type=submit]) {
        -webkit-appearance: button;
        -moz-appearance: button;
        appearance: button
    }
    ::file-selector-button {
        -webkit-appearance: button;
        -moz-appearance: button;
        appearance: button
    }
    ::-webkit-inner-spin-button {
        height: auto
    }
    ::-webkit-outer-spin-button {
        height: auto
    }
    [hidden]:where(:not([hidden=until-found])) {
        display: none !important
    }
    *,
    :after,
    :before,
    ::backdrop {
        border-color: var(--color-gray-200, currentColor)
    }
    ::file-selector-button {
        border-color: var(--color-gray-200, currentColor)
    }
}

@layer components;
@layer utilities {
    .pointer-events-none {
        pointer-events: none
    }
    .collapse {
        visibility: collapse
    }
    .invisible {
        visibility: hidden
    }
    .visible {
        visibility: visible
    }
    .sr-only {
        clip: rect(0, 0, 0, 0);
        white-space: nowrap;
        border-width: 0;
        width: 1px;
        height: 1px;
        margin: -1px;
        padding: 0;
        position: absolute;
        overflow: hidden
    }
    .absolute {
        position: absolute
    }
    .fixed {
        position: fixed
    }
    .relative {
        position: relative
    }
    .static {
        position: static
    }
    .sticky {
        position: sticky
    }
    .-inset-1 {
        inset: calc(var(--spacing)*-1)
    }
    .inset-0 {
        inset: calc(var(--spacing)*0)
    }
    .inset-y-0 {
        inset-block: calc(var(--spacing)*0)
    }
    .start-1 {
        inset-inline-start: calc(var(--spacing)*1)
    }
    .-top-1 {
        top: calc(var(--spacing)*-1)
    }
    .top-0 {
        top: calc(var(--spacing)*0)
    }
    .top-1\/2 {
        top: 50%
    }
    .top-1\/4 {
        top: 25%
    }
    .top-2 {
        top: calc(var(--spacing)*2)
    }
    .top-16 {
        top: calc(var(--spacing)*16)
    }
    .top-full {
        top: 100%
    }
    .-right-1 {
        right: calc(var(--spacing)*-1)
    }
    .-right-20 {
        right: calc(var(--spacing)*-20)
    }
    .right-0 {
        right: calc(var(--spacing)*0)
    }
    .right-2\.5 {
        right: calc(var(--spacing)*2.5)
    }
    .right-6 {
        right: calc(var(--spacing)*6)
    }
    .-bottom-20 {
        bottom: calc(var(--spacing)*-20)
    }
    .bottom-0 {
        bottom: calc(var(--spacing)*0)
    }
    .bottom-1\/4 {
        bottom: 25%
    }
    .bottom-6 {
        bottom: calc(var(--spacing)*6)
    }
    .bottom-full {
        bottom: 100%
    }
    .-left-20 {
        left: calc(var(--spacing)*-20)
    }
    .left-0 {
        left: calc(var(--spacing)*0)
    }
    .left-2 {
        left: calc(var(--spacing)*2)
    }
    .left-2\.5 {
        left: calc(var(--spacing)*2.5)
    }
    .z-0 {
        z-index: 0
    }
    .z-10 {
        z-index: 10
    }
    .z-20 {
        z-index: 20
    }
    .z-30 {
        z-index: 30
    }
    .z-40 {
        z-index: 40
    }
    .z-50 {
        z-index: 50
    }
    .z-\[99\] {
        z-index: 99
    }
    .order-first {
        order: -9999
    }
    .col-span-1 {
        grid-column: span 1/span 1
    }
    .col-span-2 {
        grid-column: span 2/span 2
    }
    .col-span-3 {
        grid-column: span 3/span 3
    }
    .col-span-full {
        grid-column: 1/-1
    }
    .float-right {
        float: right
    }
    .container {
        width: 100%
    }
    @media (min-width:40rem) {
        .container {
            max-width: 40rem
        }
    }
    @media (min-width:48rem) {
        .container {
            max-width: 48rem
        }
    }
    @media (min-width:64rem) {
        .container {
            max-width: 64rem
        }
    }
    @media (min-width:80rem) {
        .container {
            max-width: 80rem
        }
    }
    @media (min-width:96rem) {
        .container {
            max-width: 96rem
        }
    }
    .-mx-2 {
        margin-inline: calc(var(--spacing)*-2)
    }
    .mx-1 {
        margin-inline: calc(var(--spacing)*1)
    }
    .mx-2 {
        margin-inline: calc(var(--spacing)*2)
    }
    .mx-4 {
        margin-inline: calc(var(--spacing)*4)
    }
    .mx-auto {
        margin-inline: auto
    }
    .my-2 {
        margin-block: calc(var(--spacing)*2)
    }
    .my-4 {
        margin-block: calc(var(--spacing)*4)
    }
    .my-5 {
        margin-block: calc(var(--spacing)*5)
    }
    .my-6 {
        margin-block: calc(var(--spacing)*6)
    }
    .me-2 {
        margin-inline-end: calc(var(--spacing)*2)
    }
    .prose {
        color: var(--tw-prose-body);
        --tw-prose-body: oklch(37.3% .034 259.733);
        --tw-prose-headings: oklch(21% .034 264.665);
        --tw-prose-lead: oklch(44.6% .03 256.802);
        --tw-prose-links: oklch(21% .034 264.665);
        --tw-prose-bold: oklch(21% .034 264.665);
        --tw-prose-counters: oklch(55.1% .027 264.364);
        --tw-prose-bullets: oklch(87.2% .01 258.338);
        --tw-prose-hr: oklch(92.8% .006 264.531);
        --tw-prose-quotes: oklch(21% .034 264.665);
        --tw-prose-quote-borders: oklch(92.8% .006 264.531);
        --tw-prose-captions: oklch(55.1% .027 264.364);
        --tw-prose-kbd: oklch(21% .034 264.665);
        --tw-prose-kbd-shadows: NaN NaN NaN;
        --tw-prose-code: oklch(21% .034 264.665);
        --tw-prose-pre-code: oklch(92.8% .006 264.531);
        --tw-prose-pre-bg: oklch(27.8% .033 256.848);
        --tw-prose-th-borders: oklch(87.2% .01 258.338);
        --tw-prose-td-borders: oklch(92.8% .006 264.531);
        --tw-prose-invert-body: oklch(87.2% .01 258.338);
        --tw-prose-invert-headings: #fff;
        --tw-prose-invert-lead: oklch(70.7% .022 261.325);
        --tw-prose-invert-links: #fff;
        --tw-prose-invert-bold: #fff;
        --tw-prose-invert-counters: oklch(70.7% .022 261.325);
        --tw-prose-invert-bullets: oklch(44.6% .03 256.802);
        --tw-prose-invert-hr: oklch(37.3% .034 259.733);
        --tw-prose-invert-quotes: oklch(96.7% .003 264.542);
        --tw-prose-invert-quote-borders: oklch(37.3% .034 259.733);
        --tw-prose-invert-captions: oklch(70.7% .022 261.325);
        --tw-prose-invert-kbd: #fff;
        --tw-prose-invert-kbd-shadows: 255 255 255;
        --tw-prose-invert-code: #fff;
        --tw-prose-invert-pre-code: oklch(87.2% .01 258.338);
        --tw-prose-invert-pre-bg: #00000080;
        --tw-prose-invert-th-borders: oklch(44.6% .03 256.802);
        --tw-prose-invert-td-borders: oklch(37.3% .034 259.733);
        max-width: 65ch;
        font-size: 1rem;
        line-height: 1.75
    }
    .prose :where(p):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.25em;
        margin-bottom: 1.25em
    }
    .prose :where([class~=lead]):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: var(--tw-prose-lead);
        margin-top: 1.2em;
        margin-bottom: 1.2em;
        font-size: 1.25em;
        line-height: 1.6
    }
    .prose :where(a):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: var(--tw-prose-links);
        font-weight: 500;
        text-decoration: underline
    }
    .prose :where(strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: var(--tw-prose-bold);
        font-weight: 600
    }
    .prose :where(a strong):not(:where([class~=not-prose], [class~=not-prose] *)),
    .prose :where(blockquote strong):not(:where([class~=not-prose], [class~=not-prose] *)),
    .prose :where(thead th strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: inherit
    }
    .prose :where(ol):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.25em;
        margin-bottom: 1.25em;
        padding-inline-start: 1.625em;
        list-style-type: decimal
    }
    .prose :where(ol[type=A]):not(:where([class~=not-prose], [class~=not-prose] *)) {
        list-style-type: upper-alpha
    }
    .prose :where(ol[type=a]):not(:where([class~=not-prose], [class~=not-prose] *)) {
        list-style-type: lower-alpha
    }
    .prose :where(ol[type=A s]):not(:where([class~=not-prose], [class~=not-prose] *)) {
        list-style-type: upper-alpha
    }
    .prose :where(ol[type=a s]):not(:where([class~=not-prose], [class~=not-prose] *)) {
        list-style-type: lower-alpha
    }
    .prose :where(ol[type=I]):not(:where([class~=not-prose], [class~=not-prose] *)) {
        list-style-type: upper-roman
    }
    .prose :where(ol[type=i]):not(:where([class~=not-prose], [class~=not-prose] *)) {
        list-style-type: lower-roman
    }
    .prose :where(ol[type=I s]):not(:where([class~=not-prose], [class~=not-prose] *)) {
        list-style-type: upper-roman
    }
    .prose :where(ol[type=i s]):not(:where([class~=not-prose], [class~=not-prose] *)) {
        list-style-type: lower-roman
    }
    .prose :where(ol[type="1"]):not(:where([class~=not-prose], [class~=not-prose] *)) {
        list-style-type: decimal
    }
    .prose :where(ul):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.25em;
        margin-bottom: 1.25em;
        padding-inline-start: 1.625em;
        list-style-type: disc
    }
    .prose :where(ol>li):not(:where([class~=not-prose], [class~=not-prose] *))::marker {
        color: var(--tw-prose-counters);
        font-weight: 400
    }
    .prose :where(ul>li):not(:where([class~=not-prose], [class~=not-prose] *))::marker {
        color: var(--tw-prose-bullets)
    }
    .prose :where(dt):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: var(--tw-prose-headings);
        margin-top: 1.25em;
        font-weight: 600
    }
    .prose :where(hr):not(:where([class~=not-prose], [class~=not-prose] *)) {
        border-color: var(--tw-prose-hr);
        border-top-width: 1px;
        margin-top: 3em;
        margin-bottom: 3em
    }
    .prose :where(blockquote):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: var(--tw-prose-quotes);
        border-inline-start-width: .25rem;
        border-inline-start-color: var(--tw-prose-quote-borders);
        quotes: "“""”""‘""’";
        margin-top: 1.6em;
        margin-bottom: 1.6em;
        padding-inline-start: 1em;
        font-style: italic;
        font-weight: 500
    }
    .prose :where(blockquote p:first-of-type):not(:where([class~=not-prose], [class~=not-prose] *)):before {
        content: open-quote
    }
    .prose :where(blockquote p:last-of-type):not(:where([class~=not-prose], [class~=not-prose] *)):after {
        content: close-quote
    }
    .prose :where(h1):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: var(--tw-prose-headings);
        margin-top: 0;
        margin-bottom: .888889em;
        font-size: 2.25em;
        font-weight: 800;
        line-height: 1.11111
    }
    .prose :where(h1 strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: inherit;
        font-weight: 900
    }
    .prose :where(h2):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: var(--tw-prose-headings);
        margin-top: 2em;
        margin-bottom: 1em;
        font-size: 1.5em;
        font-weight: 700;
        line-height: 1.33333
    }
    .prose :where(h2 strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: inherit;
        font-weight: 800
    }
    .prose :where(h3):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: var(--tw-prose-headings);
        margin-top: 1.6em;
        margin-bottom: .6em;
        font-size: 1.25em;
        font-weight: 600;
        line-height: 1.6
    }
    .prose :where(h3 strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: inherit;
        font-weight: 700
    }
    .prose :where(h4):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: var(--tw-prose-headings);
        margin-top: 1.5em;
        margin-bottom: .5em;
        font-weight: 600;
        line-height: 1.5
    }
    .prose :where(h4 strong):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: inherit;
        font-weight: 700
    }
    .prose :where(img):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 2em;
        margin-bottom: 2em
    }
    .prose :where(picture):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 2em;
        margin-bottom: 2em;
        display: block
    }
    .prose :where(video):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 2em;
        margin-bottom: 2em
    }
    .prose :where(kbd):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: var(--tw-prose-kbd);
        box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows)/10%), 0 3px rgb(var(--tw-prose-kbd-shadows)/10%);
        padding-top: .1875em;
        padding-inline-end: .375em;
        padding-bottom: .1875em;
        border-radius: .3125rem;
        padding-inline-start: .375em;
        font-family: inherit;
        font-size: .875em;
        font-weight: 500
    }
    .prose :where(code):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: var(--tw-prose-code);
        font-size: .875em;
        font-weight: 600
    }
    .prose :where(code):not(:where([class~=not-prose], [class~=not-prose] *)):before,
    .prose :where(code):not(:where([class~=not-prose], [class~=not-prose] *)):after {
        content: "`"
    }
    .prose :where(a code):not(:where([class~=not-prose], [class~=not-prose] *)),
    .prose :where(h1 code):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: inherit
    }
    .prose :where(h2 code):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: inherit;
        font-size: .875em
    }
    .prose :where(h3 code):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: inherit;
        font-size: .9em
    }
    .prose :where(h4 code):not(:where([class~=not-prose], [class~=not-prose] *)),
    .prose :where(blockquote code):not(:where([class~=not-prose], [class~=not-prose] *)),
    .prose :where(thead th code):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: inherit
    }
    .prose :where(pre):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: var(--tw-prose-pre-code);
        background-color: var(--tw-prose-pre-bg);
        padding-top: .857143em;
        padding-inline-end: 1.14286em;
        padding-bottom: .857143em;
        border-radius: .375rem;
        margin-top: 1.71429em;
        margin-bottom: 1.71429em;
        padding-inline-start: 1.14286em;
        font-size: .875em;
        font-weight: 400;
        line-height: 1.71429;
        overflow-x: auto
    }
    .prose :where(pre code):not(:where([class~=not-prose], [class~=not-prose] *)) {
        font-weight: inherit;
        color: inherit;
        font-size: inherit;
        font-family: inherit;
        line-height: inherit;
        background-color: #0000;
        border-width: 0;
        border-radius: 0;
        padding: 0
    }
    .prose :where(pre code):not(:where([class~=not-prose], [class~=not-prose] *)):before,
    .prose :where(pre code):not(:where([class~=not-prose], [class~=not-prose] *)):after {
        content: none
    }
    .prose :where(table):not(:where([class~=not-prose], [class~=not-prose] *)) {
        table-layout: auto;
        width: 100%;
        margin-top: 2em;
        margin-bottom: 2em;
        font-size: .875em;
        line-height: 1.71429
    }
    .prose :where(thead):not(:where([class~=not-prose], [class~=not-prose] *)) {
        border-bottom-width: 1px;
        border-bottom-color: var(--tw-prose-th-borders)
    }
    .prose :where(thead th):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: var(--tw-prose-headings);
        vertical-align: bottom;
        padding-inline-end: .571429em;
        padding-bottom: .571429em;
        padding-inline-start: .571429em;
        font-weight: 600
    }
    .prose :where(tbody tr):not(:where([class~=not-prose], [class~=not-prose] *)) {
        border-bottom-width: 1px;
        border-bottom-color: var(--tw-prose-td-borders)
    }
    .prose :where(tbody tr:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        border-bottom-width: 0
    }
    .prose :where(tbody td):not(:where([class~=not-prose], [class~=not-prose] *)) {
        vertical-align: baseline
    }
    .prose :where(tfoot):not(:where([class~=not-prose], [class~=not-prose] *)) {
        border-top-width: 1px;
        border-top-color: var(--tw-prose-th-borders)
    }
    .prose :where(tfoot td):not(:where([class~=not-prose], [class~=not-prose] *)) {
        vertical-align: top
    }
    .prose :where(th, td):not(:where([class~=not-prose], [class~=not-prose] *)) {
        text-align: start
    }
    .prose :where(figure>*):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 0;
        margin-bottom: 0
    }
    .prose :where(figcaption):not(:where([class~=not-prose], [class~=not-prose] *)) {
        color: var(--tw-prose-captions);
        margin-top: .857143em;
        font-size: .875em;
        line-height: 1.42857
    }
    .prose :where(picture>img):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 0;
        margin-bottom: 0
    }
    .prose :where(li):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: .5em;
        margin-bottom: .5em
    }
    .prose :where(ol>li):not(:where([class~=not-prose], [class~=not-prose] *)),
    .prose :where(ul>li):not(:where([class~=not-prose], [class~=not-prose] *)) {
        padding-inline-start: .375em
    }
    .prose :where(.prose>ul>li p):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: .75em;
        margin-bottom: .75em
    }
    .prose :where(.prose>ul>li>p:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.25em
    }
    .prose :where(.prose>ul>li>p:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-bottom: 1.25em
    }
    .prose :where(.prose>ol>li>p:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.25em
    }
    .prose :where(.prose>ol>li>p:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-bottom: 1.25em
    }
    .prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: .75em;
        margin-bottom: .75em
    }
    .prose :where(dl):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.25em;
        margin-bottom: 1.25em
    }
    .prose :where(dd):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: .5em;
        padding-inline-start: 1.625em
    }
    .prose :where(hr+*):not(:where([class~=not-prose], [class~=not-prose] *)),
    .prose :where(h2+*):not(:where([class~=not-prose], [class~=not-prose] *)),
    .prose :where(h3+*):not(:where([class~=not-prose], [class~=not-prose] *)),
    .prose :where(h4+*):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 0
    }
    .prose :where(thead th:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        padding-inline-start: 0
    }
    .prose :where(thead th:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        padding-inline-end: 0
    }
    .prose :where(tbody td, tfoot td):not(:where([class~=not-prose], [class~=not-prose] *)) {
        padding-top: .571429em;
        padding-inline-end: .571429em;
        padding-bottom: .571429em;
        padding-inline-start: .571429em
    }
    .prose :where(tbody td:first-child, tfoot td:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        padding-inline-start: 0
    }
    .prose :where(tbody td:last-child, tfoot td:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        padding-inline-end: 0
    }
    .prose :where(figure):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 2em;
        margin-bottom: 2em
    }
    .prose :where(.prose>:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 0
    }
    .prose :where(.prose>:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-bottom: 0
    }
    .prose-lg {
        font-size: 1.125rem;
        line-height: 1.77778
    }
    .prose-lg :where(p):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.33333em;
        margin-bottom: 1.33333em
    }
    .prose-lg :where([class~=lead]):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.09091em;
        margin-bottom: 1.09091em;
        font-size: 1.22222em;
        line-height: 1.45455
    }
    .prose-lg :where(blockquote):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.66667em;
        margin-bottom: 1.66667em;
        padding-inline-start: 1em
    }
    .prose-lg :where(h1):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 0;
        margin-bottom: .833333em;
        font-size: 2.66667em;
        line-height: 1
    }
    .prose-lg :where(h2):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.86667em;
        margin-bottom: 1.06667em;
        font-size: 1.66667em;
        line-height: 1.33333
    }
    .prose-lg :where(h3):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.66667em;
        margin-bottom: .666667em;
        font-size: 1.33333em;
        line-height: 1.5
    }
    .prose-lg :where(h4):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.77778em;
        margin-bottom: .444444em;
        line-height: 1.55556
    }
    .prose-lg :where(img):not(:where([class~=not-prose], [class~=not-prose] *)),
    .prose-lg :where(picture):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.77778em;
        margin-bottom: 1.77778em
    }
    .prose-lg :where(picture>img):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 0;
        margin-bottom: 0
    }
    .prose-lg :where(video):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.77778em;
        margin-bottom: 1.77778em
    }
    .prose-lg :where(kbd):not(:where([class~=not-prose], [class~=not-prose] *)) {
        padding-top: .222222em;
        padding-inline-end: .444444em;
        padding-bottom: .222222em;
        border-radius: .3125rem;
        padding-inline-start: .444444em;
        font-size: .888889em
    }
    .prose-lg :where(code):not(:where([class~=not-prose], [class~=not-prose] *)) {
        font-size: .888889em
    }
    .prose-lg :where(h2 code):not(:where([class~=not-prose], [class~=not-prose] *)) {
        font-size: .866667em
    }
    .prose-lg :where(h3 code):not(:where([class~=not-prose], [class~=not-prose] *)) {
        font-size: .875em
    }
    .prose-lg :where(pre):not(:where([class~=not-prose], [class~=not-prose] *)) {
        padding-top: 1em;
        padding-inline-end: 1.5em;
        padding-bottom: 1em;
        border-radius: .375rem;
        margin-top: 2em;
        margin-bottom: 2em;
        padding-inline-start: 1.5em;
        font-size: .888889em;
        line-height: 1.75
    }
    .prose-lg :where(ol):not(:where([class~=not-prose], [class~=not-prose] *)),
    .prose-lg :where(ul):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.33333em;
        margin-bottom: 1.33333em;
        padding-inline-start: 1.55556em
    }
    .prose-lg :where(li):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: .666667em;
        margin-bottom: .666667em
    }
    .prose-lg :where(ol>li):not(:where([class~=not-prose], [class~=not-prose] *)),
    .prose-lg :where(ul>li):not(:where([class~=not-prose], [class~=not-prose] *)) {
        padding-inline-start: .444444em
    }
    .prose-lg :where(.prose-lg>ul>li p):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: .888889em;
        margin-bottom: .888889em
    }
    .prose-lg :where(.prose-lg>ul>li>p:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.33333em
    }
    .prose-lg :where(.prose-lg>ul>li>p:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-bottom: 1.33333em
    }
    .prose-lg :where(.prose-lg>ol>li>p:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.33333em
    }
    .prose-lg :where(.prose-lg>ol>li>p:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-bottom: 1.33333em
    }
    .prose-lg :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: .888889em;
        margin-bottom: .888889em
    }
    .prose-lg :where(dl):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.33333em;
        margin-bottom: 1.33333em
    }
    .prose-lg :where(dt):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.33333em
    }
    .prose-lg :where(dd):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: .666667em;
        padding-inline-start: 1.55556em
    }
    .prose-lg :where(hr):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 3.11111em;
        margin-bottom: 3.11111em
    }
    .prose-lg :where(hr+*):not(:where([class~=not-prose], [class~=not-prose] *)),
    .prose-lg :where(h2+*):not(:where([class~=not-prose], [class~=not-prose] *)),
    .prose-lg :where(h3+*):not(:where([class~=not-prose], [class~=not-prose] *)),
    .prose-lg :where(h4+*):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 0
    }
    .prose-lg :where(table):not(:where([class~=not-prose], [class~=not-prose] *)) {
        font-size: .888889em;
        line-height: 1.5
    }
    .prose-lg :where(thead th):not(:where([class~=not-prose], [class~=not-prose] *)) {
        padding-inline-end: .75em;
        padding-bottom: .75em;
        padding-inline-start: .75em
    }
    .prose-lg :where(thead th:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        padding-inline-start: 0
    }
    .prose-lg :where(thead th:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        padding-inline-end: 0
    }
    .prose-lg :where(tbody td, tfoot td):not(:where([class~=not-prose], [class~=not-prose] *)) {
        padding-top: .75em;
        padding-inline-end: .75em;
        padding-bottom: .75em;
        padding-inline-start: .75em
    }
    .prose-lg :where(tbody td:first-child, tfoot td:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        padding-inline-start: 0
    }
    .prose-lg :where(tbody td:last-child, tfoot td:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        padding-inline-end: 0
    }
    .prose-lg :where(figure):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.77778em;
        margin-bottom: 1.77778em
    }
    .prose-lg :where(figure>*):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 0;
        margin-bottom: 0
    }
    .prose-lg :where(figcaption):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1em;
        font-size: .888889em;
        line-height: 1.5
    }
    .prose-lg :where(.prose-lg>:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 0
    }
    .prose-lg :where(.prose-lg>:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-bottom: 0
    }
    .prose-sm {
        font-size: .875rem;
        line-height: 1.71429
    }
    .prose-sm :where(p):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.14286em;
        margin-bottom: 1.14286em
    }
    .prose-sm :where([class~=lead]):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: .888889em;
        margin-bottom: .888889em;
        font-size: 1.28571em;
        line-height: 1.55556
    }
    .prose-sm :where(blockquote):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.33333em;
        margin-bottom: 1.33333em;
        padding-inline-start: 1.11111em
    }
    .prose-sm :where(h1):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 0;
        margin-bottom: .8em;
        font-size: 2.14286em;
        line-height: 1.2
    }
    .prose-sm :where(h2):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.6em;
        margin-bottom: .8em;
        font-size: 1.42857em;
        line-height: 1.4
    }
    .prose-sm :where(h3):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.55556em;
        margin-bottom: .444444em;
        font-size: 1.28571em;
        line-height: 1.55556
    }
    .prose-sm :where(h4):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.42857em;
        margin-bottom: .571429em;
        line-height: 1.42857
    }
    .prose-sm :where(img):not(:where([class~=not-prose], [class~=not-prose] *)),
    .prose-sm :where(picture):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.71429em;
        margin-bottom: 1.71429em
    }
    .prose-sm :where(picture>img):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 0;
        margin-bottom: 0
    }
    .prose-sm :where(video):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.71429em;
        margin-bottom: 1.71429em
    }
    .prose-sm :where(kbd):not(:where([class~=not-prose], [class~=not-prose] *)) {
        padding-top: .142857em;
        padding-inline-end: .357143em;
        padding-bottom: .142857em;
        border-radius: .3125rem;
        padding-inline-start: .357143em;
        font-size: .857143em
    }
    .prose-sm :where(code):not(:where([class~=not-prose], [class~=not-prose] *)) {
        font-size: .857143em
    }
    .prose-sm :where(h2 code):not(:where([class~=not-prose], [class~=not-prose] *)) {
        font-size: .9em
    }
    .prose-sm :where(h3 code):not(:where([class~=not-prose], [class~=not-prose] *)) {
        font-size: .888889em
    }
    .prose-sm :where(pre):not(:where([class~=not-prose], [class~=not-prose] *)) {
        padding-top: .666667em;
        padding-inline-end: 1em;
        padding-bottom: .666667em;
        border-radius: .25rem;
        margin-top: 1.66667em;
        margin-bottom: 1.66667em;
        padding-inline-start: 1em;
        font-size: .857143em;
        line-height: 1.66667
    }
    .prose-sm :where(ol):not(:where([class~=not-prose], [class~=not-prose] *)),
    .prose-sm :where(ul):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.14286em;
        margin-bottom: 1.14286em;
        padding-inline-start: 1.57143em
    }
    .prose-sm :where(li):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: .285714em;
        margin-bottom: .285714em
    }
    .prose-sm :where(ol>li):not(:where([class~=not-prose], [class~=not-prose] *)),
    .prose-sm :where(ul>li):not(:where([class~=not-prose], [class~=not-prose] *)) {
        padding-inline-start: .428571em
    }
    .prose-sm :where(.prose-sm>ul>li p):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: .571429em;
        margin-bottom: .571429em
    }
    .prose-sm :where(.prose-sm>ul>li>p:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.14286em
    }
    .prose-sm :where(.prose-sm>ul>li>p:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-bottom: 1.14286em
    }
    .prose-sm :where(.prose-sm>ol>li>p:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.14286em
    }
    .prose-sm :where(.prose-sm>ol>li>p:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-bottom: 1.14286em
    }
    .prose-sm :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: .571429em;
        margin-bottom: .571429em
    }
    .prose-sm :where(dl):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.14286em;
        margin-bottom: 1.14286em
    }
    .prose-sm :where(dt):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.14286em
    }
    .prose-sm :where(dd):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: .285714em;
        padding-inline-start: 1.57143em
    }
    .prose-sm :where(hr):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 2.85714em;
        margin-bottom: 2.85714em
    }
    .prose-sm :where(hr+*):not(:where([class~=not-prose], [class~=not-prose] *)),
    .prose-sm :where(h2+*):not(:where([class~=not-prose], [class~=not-prose] *)),
    .prose-sm :where(h3+*):not(:where([class~=not-prose], [class~=not-prose] *)),
    .prose-sm :where(h4+*):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 0
    }
    .prose-sm :where(table):not(:where([class~=not-prose], [class~=not-prose] *)) {
        font-size: .857143em;
        line-height: 1.5
    }
    .prose-sm :where(thead th):not(:where([class~=not-prose], [class~=not-prose] *)) {
        padding-inline-end: 1em;
        padding-bottom: .666667em;
        padding-inline-start: 1em
    }
    .prose-sm :where(thead th:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        padding-inline-start: 0
    }
    .prose-sm :where(thead th:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        padding-inline-end: 0
    }
    .prose-sm :where(tbody td, tfoot td):not(:where([class~=not-prose], [class~=not-prose] *)) {
        padding-top: .666667em;
        padding-inline-end: 1em;
        padding-bottom: .666667em;
        padding-inline-start: 1em
    }
    .prose-sm :where(tbody td:first-child, tfoot td:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        padding-inline-start: 0
    }
    .prose-sm :where(tbody td:last-child, tfoot td:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        padding-inline-end: 0
    }
    .prose-sm :where(figure):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 1.71429em;
        margin-bottom: 1.71429em
    }
    .prose-sm :where(figure>*):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 0;
        margin-bottom: 0
    }
    .prose-sm :where(figcaption):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: .666667em;
        font-size: .857143em;
        line-height: 1.33333
    }
    .prose-sm :where(.prose-sm>:first-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-top: 0
    }
    .prose-sm :where(.prose-sm>:last-child):not(:where([class~=not-prose], [class~=not-prose] *)) {
        margin-bottom: 0
    }
    .\ !mt-0 {
        margin-top: calc(var(--spacing)*0) !important
    }
    .mt-1 {
        margin-top: calc(var(--spacing)*1)
    }
    .mt-2 {
        margin-top: calc(var(--spacing)*2)
    }
    .mt-3 {
        margin-top: calc(var(--spacing)*3)
    }
    .mt-4 {
        margin-top: calc(var(--spacing)*4)
    }
    .mt-5 {
        margin-top: calc(var(--spacing)*5)
    }
    .mt-6 {
        margin-top: calc(var(--spacing)*6)
    }
    .mt-8 {
        margin-top: calc(var(--spacing)*8)
    }
    .mt-10 {
        margin-top: calc(var(--spacing)*10)
    }
    .mt-12 {
        margin-top: calc(var(--spacing)*12)
    }
    .mt-14 {
        margin-top: calc(var(--spacing)*14)
    }
    .mt-16 {
        margin-top: calc(var(--spacing)*16)
    }
    .mt-24 {
        margin-top: calc(var(--spacing)*24)
    }
    .mt-44 {
        margin-top: calc(var(--spacing)*44)
    }
    .mt-auto {
        margin-top: auto
    }
    .mr-2 {
        margin-right: calc(var(--spacing)*2)
    }
    .mr-3 {
        margin-right: calc(var(--spacing)*3)
    }
    .mr-4 {
        margin-right: calc(var(--spacing)*4)
    }
    .mr-8 {
        margin-right: calc(var(--spacing)*8)
    }
    .mr-auto {
        margin-right: auto
    }
    .-mb-px {
        margin-bottom: -1px
    }
    .mb-0\.5 {
        margin-bottom: calc(var(--spacing)*.5)
    }
    .mb-1 {
        margin-bottom: calc(var(--spacing)*1)
    }
    .mb-2 {
        margin-bottom: calc(var(--spacing)*2)
    }
    .mb-3 {
        margin-bottom: calc(var(--spacing)*3)
    }
    .mb-4 {
        margin-bottom: calc(var(--spacing)*4)
    }
    .mb-5 {
        margin-bottom: calc(var(--spacing)*5)
    }
    .mb-6 {
        margin-bottom: calc(var(--spacing)*6)
    }
    .mb-7 {
        margin-bottom: calc(var(--spacing)*7)
    }
    .mb-8 {
        margin-bottom: calc(var(--spacing)*8)
    }
    .mb-10 {
        margin-bottom: calc(var(--spacing)*10)
    }
    .mb-12 {
        margin-bottom: calc(var(--spacing)*12)
    }
    .ml-1 {
        margin-left: calc(var(--spacing)*1)
    }
    .ml-2 {
        margin-left: calc(var(--spacing)*2)
    }
    .ml-3 {
        margin-left: calc(var(--spacing)*3)
    }
    .ml-7 {
        margin-left: calc(var(--spacing)*7)
    }
    .ml-auto {
        margin-left: auto
    }
    .form-checkbox {
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        -webkit-print-color-adjust: exact;
        print-color-adjust: exact;
        vertical-align: middle;
        -webkit-user-select: none;
        user-select: none;
        color: #155dfc;
        --tw-shadow: 0 0 #0000;
        background-color: #fff;
        background-origin: border-box;
        border-width: 1px;
        border-color: #6a7282;
        border-radius: 0;
        flex-shrink: 0;
        width: 1rem;
        height: 1rem;
        padding: 0;
        display: inline-block
    }
    .form-checkbox:focus {
        outline-offset: 2px;
        --tw-ring-inset: var(--tw-empty, );
        --tw-ring-offset-width: 2px;
        --tw-ring-offset-color: #fff;
        --tw-ring-color: oklch(54.6% .245 262.881);
        --tw-ring-offset-shadow: var(--tw-ring-inset)0 0 0 var(--tw-ring-offset-width)var(--tw-ring-offset-color);
        --tw-ring-shadow: var(--tw-ring-inset)0 0 0 calc(2px + var(--tw-ring-offset-width))var(--tw-ring-color);
        box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        outline: 2px solid #0000
    }
    .form-checkbox:checked {
        background-color: currentColor;
        background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M12.207 4.793a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-2-2a1 1 0 011.414-1.414L6.5 9.086l4.293-4.293a1 1 0 011.414 0z'/%3e%3c/svg%3e");
        background-position: 50%;
        background-repeat: no-repeat;
        background-size: 100% 100%;
        border-color: #0000
    }
    @media (forced-colors:active) {
        .form-checkbox:checked {
            -webkit-appearance: auto;
            -moz-appearance: auto;
            appearance: auto
        }
    }
    .form-checkbox:checked:hover,
    .form-checkbox:checked:focus {
        background-color: currentColor;
        border-color: #0000
    }
    .form-checkbox:indeterminate {
        background-color: currentColor;
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 16 16'%3e%3cpath stroke='white' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 8h8'/%3e%3c/svg%3e");
        background-position: 50%;
        background-repeat: no-repeat;
        background-size: 100% 100%;
        border-color: #0000
    }
    @media (forced-colors:active) {
        .form-checkbox:indeterminate {
            -webkit-appearance: auto;
            -moz-appearance: auto;
            appearance: auto
        }
    }
    .form-checkbox:indeterminate:hover,
    .form-checkbox:indeterminate:focus {
        background-color: currentColor;
        border-color: #0000
    }
    .form-radio {
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        -webkit-print-color-adjust: exact;
        print-color-adjust: exact;
        vertical-align: middle;
        -webkit-user-select: none;
        user-select: none;
        color: #155dfc;
        --tw-shadow: 0 0 #0000;
        background-color: #fff;
        background-origin: border-box;
        border-width: 1px;
        border-color: #6a7282;
        border-radius: 100%;
        flex-shrink: 0;
        width: 1rem;
        height: 1rem;
        padding: 0;
        display: inline-block
    }
    .form-radio:focus {
        outline-offset: 2px;
        --tw-ring-inset: var(--tw-empty, );
        --tw-ring-offset-width: 2px;
        --tw-ring-offset-color: #fff;
        --tw-ring-color: oklch(54.6% .245 262.881);
        --tw-ring-offset-shadow: var(--tw-ring-inset)0 0 0 var(--tw-ring-offset-width)var(--tw-ring-offset-color);
        --tw-ring-shadow: var(--tw-ring-inset)0 0 0 calc(2px + var(--tw-ring-offset-width))var(--tw-ring-color);
        box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        outline: 2px solid #0000
    }
    .form-radio:checked {
        background-color: currentColor;
        background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle cx='8' cy='8' r='3'/%3e%3c/svg%3e");
        background-position: 50%;
        background-repeat: no-repeat;
        background-size: 100% 100%;
        border-color: #0000
    }
    @media (forced-colors:active) {
        .form-radio:checked {
            -webkit-appearance: auto;
            -moz-appearance: auto;
            appearance: auto
        }
    }
    .form-radio:checked:hover,
    .form-radio:checked:focus {
        background-color: currentColor;
        border-color: #0000
    }
    .block {
        display: block
    }
    .contents {
        display: contents
    }
    .flex {
        display: flex
    }
    .grid {
        display: grid
    }
    .hidden {
        display: none
    }
    .inline {
        display: inline
    }
    .inline-block {
        display: inline-block
    }
    .inline-flex {
        display: inline-flex
    }
    .inline-grid {
        display: inline-grid
    }
    .inline-table {
        display: inline-table
    }
    .list-item {
        display: list-item
    }
    .table {
        display: table
    }
    .table\ ! {
        display: table !important
    }
    .table-caption {
        display: table-caption
    }
    .table-cell {
        display: table-cell
    }
    .table-column {
        display: table-column
    }
    .table-column-group {
        display: table-column-group
    }
    .table-footer-group {
        display: table-footer-group
    }
    .table-header-group {
        display: table-header-group
    }
    .table-row {
        display: table-row
    }
    .table-row-group {
        display: table-row-group
    }
    .size-1 {
        width: calc(var(--spacing)*1);
        height: calc(var(--spacing)*1)
    }
    .size-3 {
        width: calc(var(--spacing)*3);
        height: calc(var(--spacing)*3)
    }
    .size-4 {
        width: calc(var(--spacing)*4);
        height: calc(var(--spacing)*4)
    }
    .size-5 {
        width: calc(var(--spacing)*5);
        height: calc(var(--spacing)*5)
    }
    .size-6 {
        width: calc(var(--spacing)*6);
        height: calc(var(--spacing)*6)
    }
    .size-8 {
        width: calc(var(--spacing)*8);
        height: calc(var(--spacing)*8)
    }
    .size-9 {
        width: calc(var(--spacing)*9);
        height: calc(var(--spacing)*9)
    }
    .size-10 {
        width: calc(var(--spacing)*10);
        height: calc(var(--spacing)*10)
    }
    .size-12 {
        width: calc(var(--spacing)*12);
        height: calc(var(--spacing)*12)
    }
    .h-0\.5 {
        height: calc(var(--spacing)*.5)
    }
    .h-1\.5 {
        height: calc(var(--spacing)*1.5)
    }
    .h-2 {
        height: calc(var(--spacing)*2)
    }
    .h-3 {
        height: calc(var(--spacing)*3)
    }
    .h-4 {
        height: calc(var(--spacing)*4)
    }
    .h-5 {
        height: calc(var(--spacing)*5)
    }
    .h-6 {
        height: calc(var(--spacing)*6)
    }
    .h-8 {
        height: calc(var(--spacing)*8)
    }
    .h-10 {
        height: calc(var(--spacing)*10)
    }
    .h-12 {
        height: calc(var(--spacing)*12)
    }
    .h-14 {
        height: calc(var(--spacing)*14)
    }
    .h-16 {
        height: calc(var(--spacing)*16)
    }
    .h-32 {
        height: calc(var(--spacing)*32)
    }
    .h-48 {
        height: calc(var(--spacing)*48)
    }
    .h-56 {
        height: calc(var(--spacing)*56)
    }
    .h-64 {
        height: calc(var(--spacing)*64)
    }
    .h-96 {
        height: calc(var(--spacing)*96)
    }
    .h-auto {
        height: auto
    }
    .h-fit {
        height: fit-content
    }
    .h-full {
        height: 100%
    }
    .h-px {
        height: 1px
    }
    .h-screen {
        height: 100vh
    }
    .max-h-28 {
        max-height: calc(var(--spacing)*28)
    }
    .max-h-60 {
        max-height: calc(var(--spacing)*60)
    }
    .max-h-\[60vh\] {
        max-height: 60vh
    }
    .max-h-screen {
        max-height: 100vh
    }
    .min-h-0 {
        min-height: calc(var(--spacing)*0)
    }
    .min-h-\[38px\] {
        min-height: 38px
    }
    .min-h-\[100vh\] {
        min-height: 100vh
    }
    .min-h-\[600px\] {
        min-height: 600px
    }
    .min-h-\[calc\(100vh-4rem\)\] {
        min-height: calc(100vh - 4rem)
    }
    .min-h-\[calc\(100vh-200px\)\] {
        min-height: calc(100vh - 200px)
    }
    .min-h-full {
        min-height: 100%
    }
    .min-h-screen {
        min-height: 100vh
    }
    .\ !w-14 {
        width: calc(var(--spacing)*14) !important
    }
    .\ !w-fit {
        width: fit-content !important
    }
    .w-1 {
        width: calc(var(--spacing)*1)
    }
    .w-1\.5 {
        width: calc(var(--spacing)*1.5)
    }
    .w-3 {
        width: calc(var(--spacing)*3)
    }
    .w-4 {
        width: calc(var(--spacing)*4)
    }
    .w-5 {
        width: calc(var(--spacing)*5)
    }
    .w-6 {
        width: calc(var(--spacing)*6)
    }
    .w-8 {
        width: calc(var(--spacing)*8)
    }
    .w-10 {
        width: calc(var(--spacing)*10)
    }
    .w-12 {
        width: calc(var(--spacing)*12)
    }
    .w-14 {
        width: calc(var(--spacing)*14)
    }
    .w-16 {
        width: calc(var(--spacing)*16)
    }
    .w-48 {
        width: calc(var(--spacing)*48)
    }
    .w-64 {
        width: calc(var(--spacing)*64)
    }
    .w-auto {
        width: auto
    }
    .w-fit {
        width: fit-content
    }
    .w-full {
        width: 100%
    }
    .w-px {
        width: 1px
    }
    .w-screen {
        width: 100vw
    }
    .max-w-3xl {
        max-width: var(--container-3xl)
    }
    .max-w-5xl {
        max-width: var(--container-5xl)
    }
    .max-w-7xl {
        max-width: var(--container-7xl)
    }
    .max-w-40 {
        max-width: calc(var(--spacing)*40)
    }
    .max-w-\[80\%\] {
        max-width: 80%
    }
    .max-w-\[85\%\] {
        max-width: 85%
    }
    .max-w-\[200px\] {
        max-width: 200px
    }
    .max-w-\[1800px\] {
        max-width: 1800px
    }
    .max-w-full {
        max-width: 100%
    }
    .max-w-md {
        max-width: var(--container-md)
    }
    .max-w-none {
        max-width: none
    }
    .min-w-\[140px\] {
        min-width: 140px
    }
    .flex-1 {
        flex: 1
    }
    .flex-shrink {
        flex-shrink: 1
    }
    .flex-shrink-0 {
        flex-shrink: 0
    }
    .shrink {
        flex-shrink: 1
    }
    .flex-grow,
    .grow {
        flex-grow: 1
    }
    .border-collapse {
        border-collapse: collapse
    }
    .-translate-x-1\/2 {
        --tw-translate-x: -50%;
        translate: var(--tw-translate-x)var(--tw-translate-y)
    }
    .-translate-x-full {
        --tw-translate-x: -100%;
        translate: var(--tw-translate-x)var(--tw-translate-y)
    }
    .translate-x-0 {
        --tw-translate-x: calc(var(--spacing)*0);
        translate: var(--tw-translate-x)var(--tw-translate-y)
    }
    .-translate-y-1\/2 {
        --tw-translate-y: -50%;
        translate: var(--tw-translate-x)var(--tw-translate-y)
    }
    .translate-y-0 {
        --tw-translate-y: calc(var(--spacing)*0);
        translate: var(--tw-translate-x)var(--tw-translate-y)
    }
    .translate-y-full {
        --tw-translate-y: 100%;
        translate: var(--tw-translate-x)var(--tw-translate-y)
    }
    .scale-75 {
        --tw-scale-x: 75%;
        --tw-scale-y: 75%;
        --tw-scale-z: 75%;
        scale: var(--tw-scale-x)var(--tw-scale-y)
    }
    .scale-90 {
        --tw-scale-x: 90%;
        --tw-scale-y: 90%;
        --tw-scale-z: 90%;
        scale: var(--tw-scale-x)var(--tw-scale-y)
    }
    .scale-95 {
        --tw-scale-x: 95%;
        --tw-scale-y: 95%;
        --tw-scale-z: 95%;
        scale: var(--tw-scale-x)var(--tw-scale-y)
    }
    .scale-100 {
        --tw-scale-x: 100%;
        --tw-scale-y: 100%;
        --tw-scale-z: 100%;
        scale: var(--tw-scale-x)var(--tw-scale-y)
    }
    .scale-110 {
        --tw-scale-x: 110%;
        --tw-scale-y: 110%;
        --tw-scale-z: 110%;
        scale: var(--tw-scale-x)var(--tw-scale-y)
    }
    .-rotate-45 {
        rotate: -45deg
    }
    .-rotate-90 {
        rotate: -90deg
    }
    .-rotate-180 {
        rotate: -180deg
    }
    .rotate-0 {
        rotate: none
    }
    .rotate-90 {
        rotate: 90deg
    }
    .rotate-180 {
        rotate: 180deg
    }
    .transform {
        transform: var(--tw-rotate-x, )var(--tw-rotate-y, )var(--tw-rotate-z, )var(--tw-skew-x, )var(--tw-skew-y, )
    }
    .transform\ ! {
        transform: var(--tw-rotate-x, )var(--tw-rotate-y, )var(--tw-rotate-z, )var(--tw-skew-x, )var(--tw-skew-y, ) !important
    }
    .animate-pulse {
        animation: var(--animate-pulse)
    }
    .animate-spin {
        animation: var(--animate-spin)
    }
    .cursor-not-allowed {
        cursor: not-allowed
    }
    .cursor-pointer {
        cursor: pointer
    }
    .resize {
        resize: both
    }
    .list-inside {
        list-style-position: inside
    }
    .list-disc {
        list-style-type: disc
    }
    .form-select {
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        --tw-shadow: 0 0 #0000;
        -webkit-print-color-adjust: exact;
        print-color-adjust: exact;
        background-color: #fff;
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='oklch(55.1%25 0.027 264.364)' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
        background-position: right .5rem center;
        background-repeat: no-repeat;
        background-size: 1.5em 1.5em;
        border-width: 1px;
        border-color: #6a7282;
        border-radius: 0;
        padding: .5rem 2.5rem .5rem .75rem;
        font-size: 1rem;
        line-height: 1.5rem
    }
    .form-select:focus {
        outline-offset: 2px;
        --tw-ring-inset: var(--tw-empty, );
        --tw-ring-offset-width: 0px;
        --tw-ring-offset-color: #fff;
        --tw-ring-color: oklch(54.6% .245 262.881);
        --tw-ring-offset-shadow: var(--tw-ring-inset)0 0 0 var(--tw-ring-offset-width)var(--tw-ring-offset-color);
        --tw-ring-shadow: var(--tw-ring-inset)0 0 0 calc(1px + var(--tw-ring-offset-width))var(--tw-ring-color);
        box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        border-color: #155dfc;
        outline: 2px solid #0000
    }
    .form-select:where([size]:not([size="1"])) {
        background-image: initial;
        background-position: initial;
        background-repeat: unset;
        background-size: initial;
        -webkit-print-color-adjust: unset;
        print-color-adjust: unset;
        padding-right: .75rem
    }
    .appearance-none {
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none
    }
    .auto-rows-fr {
        grid-auto-rows: minmax(0, 1fr)
    }
    .grid-cols-1 {
        grid-template-columns: repeat(1, minmax(0, 1fr))
    }
    .grid-cols-2 {
        grid-template-columns: repeat(2, minmax(0, 1fr))
    }
    .grid-cols-3 {
        grid-template-columns: repeat(3, minmax(0, 1fr))
    }
    .grid-cols-4 {
        grid-template-columns: repeat(4, minmax(0, 1fr))
    }
    .flex-col {
        flex-direction: column
    }
    .flex-row {
        flex-direction: row
    }
    .flex-wrap {
        flex-wrap: wrap
    }
    .items-center {
        align-items: center
    }
    .items-end {
        align-items: flex-end
    }
    .items-start {
        align-items: flex-start
    }
    .justify-between {
        justify-content: space-between
    }
    .justify-center {
        justify-content: center
    }
    .justify-end {
        justify-content: flex-end
    }
    .justify-start {
        justify-content: flex-start
    }
    .gap-0\.5 {
        gap: calc(var(--spacing)*.5)
    }
    .gap-1 {
        gap: calc(var(--spacing)*1)
    }
    .gap-2 {
        gap: calc(var(--spacing)*2)
    }
    .gap-3 {
        gap: calc(var(--spacing)*3)
    }
    .gap-3\.5 {
        gap: calc(var(--spacing)*3.5)
    }
    .gap-4 {
        gap: calc(var(--spacing)*4)
    }
    .gap-5 {
        gap: calc(var(--spacing)*5)
    }
    .gap-6 {
        gap: calc(var(--spacing)*6)
    }
    .gap-8 {
        gap: calc(var(--spacing)*8)
    }
    .gap-12 {
        gap: calc(var(--spacing)*12)
    }
    .gap-16 {
        gap: calc(var(--spacing)*16)
    }
    :where(.space-y-2>:not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing)*2)*var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing)*2)*calc(1 - var(--tw-space-y-reverse)))
    }
    :where(.space-y-3>:not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing)*3)*var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing)*3)*calc(1 - var(--tw-space-y-reverse)))
    }
    :where(.space-y-4>:not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing)*4)*var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing)*4)*calc(1 - var(--tw-space-y-reverse)))
    }
    :where(.space-y-5>:not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing)*5)*var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing)*5)*calc(1 - var(--tw-space-y-reverse)))
    }
    :where(.space-y-6>:not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing)*6)*var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing)*6)*calc(1 - var(--tw-space-y-reverse)))
    }
    :where(.space-y-8>:not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing)*8)*var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing)*8)*calc(1 - var(--tw-space-y-reverse)))
    }
    .gap-x-2 {
        column-gap: calc(var(--spacing)*2)
    }
    .gap-x-3 {
        column-gap: calc(var(--spacing)*3)
    }
    :where(.space-x-2>:not(:last-child)) {
        --tw-space-x-reverse: 0;
        margin-inline-start: calc(calc(var(--spacing)*2)*var(--tw-space-x-reverse));
        margin-inline-end: calc(calc(var(--spacing)*2)*calc(1 - var(--tw-space-x-reverse)))
    }
    :where(.space-x-4>:not(:last-child)) {
        --tw-space-x-reverse: 0;
        margin-inline-start: calc(calc(var(--spacing)*4)*var(--tw-space-x-reverse));
        margin-inline-end: calc(calc(var(--spacing)*4)*calc(1 - var(--tw-space-x-reverse)))
    }
    .gap-y-1 {
        row-gap: calc(var(--spacing)*1)
    }
    .gap-y-2 {
        row-gap: calc(var(--spacing)*2)
    }
    .gap-y-7 {
        row-gap: calc(var(--spacing)*7)
    }
    :where(.divide-y>:not(:last-child)) {
        --tw-divide-y-reverse: 0;
        border-bottom-style: var(--tw-border-style);
        border-top-style: var(--tw-border-style);
        border-top-width: calc(1px*var(--tw-divide-y-reverse));
        border-bottom-width: calc(1px*calc(1 - var(--tw-divide-y-reverse)))
    }
    :where(.divide-gray-200>:not(:last-child)) {
        border-color: var(--color-gray-200)
    }
    .self-end {
        align-self: flex-end
    }
    .self-start {
        align-self: flex-start
    }
    .truncate {
        text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden
    }
    .overflow-auto {
        overflow: auto
    }
    .overflow-hidden {
        overflow: hidden
    }
    .overflow-x-auto {
        overflow-x: auto
    }
    .overflow-y-auto {
        overflow-y: auto
    }
    .rounded {
        border-radius: .25rem
    }
    .rounded-2xl {
        border-radius: var(--radius-2xl)
    }
    .rounded-3xl {
        border-radius: var(--radius-3xl)
    }
    .rounded-full {
        border-radius: 3.40282e38px
    }
    .rounded-lg {
        border-radius: var(--radius-lg)
    }
    .rounded-md {
        border-radius: var(--radius-md)
    }
    .rounded-sm {
        border-radius: var(--radius-sm)
    }
    .rounded-xl {
        border-radius: var(--radius-xl)
    }
    .rounded-t-2xl {
        border-top-left-radius: var(--radius-2xl);
        border-top-right-radius: var(--radius-2xl)
    }
    .rounded-l-3xl {
        border-top-left-radius: var(--radius-3xl);
        border-bottom-left-radius: var(--radius-3xl)
    }
    .rounded-l-lg {
        border-top-left-radius: var(--radius-lg);
        border-bottom-left-radius: var(--radius-lg)
    }
    .rounded-r-3xl {
        border-top-right-radius: var(--radius-3xl);
        border-bottom-right-radius: var(--radius-3xl)
    }
    .rounded-r-lg {
        border-top-right-radius: var(--radius-lg);
        border-bottom-right-radius: var(--radius-lg)
    }
    .border {
        border-style: var(--tw-border-style);
        border-width: 1px
    }
    .border-0 {
        border-style: var(--tw-border-style);
        border-width: 0
    }
    .border-2 {
        border-style: var(--tw-border-style);
        border-width: 2px
    }
    .border-e {
        border-inline-end-style: var(--tw-border-style);
        border-inline-end-width: 1px
    }
    .border-t {
        border-top-style: var(--tw-border-style);
        border-top-width: 1px
    }
    .border-r {
        border-right-style: var(--tw-border-style);
        border-right-width: 1px
    }
    .border-b {
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 1px
    }
    .border-b-2 {
        border-bottom-style: var(--tw-border-style);
        border-bottom-width: 2px
    }
    .border-l-4 {
        border-left-style: var(--tw-border-style);
        border-left-width: 4px
    }
    .\ !border-yellow-600 {
        border-color: var(--color-yellow-600) !important
    }
    .border-\[var\(--neutral\)\],
    .border-\[var\(--neutral\)\]\/50 {
        border-color: var(--neutral)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .border-\[var\(--neutral\)\]\/50 {
            border-color: color-mix(in oklab, var(--neutral)50%, transparent)
        }
    }
    .border-background {
        border-color: hsl(var(--color-background))
    }
    .border-base\/20 {
        border-color: color-mix(in srgb, hsl(hsl(var(--color-base)))20%, transparent)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .border-base\/20 {
            border-color: color-mix(in oklab, hsl(var(--color-base))20%, transparent)
        }
    }
    .border-gray-200 {
        border-color: var(--color-gray-200)
    }
    .border-gray-200\/50 {
        border-color: #e5e7eb80
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .border-gray-200\/50 {
            border-color: color-mix(in oklab, var(--color-gray-200)50%, transparent)
        }
    }
    .border-gray-200\/80 {
        border-color: #e5e7ebcc
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .border-gray-200\/80 {
            border-color: color-mix(in oklab, var(--color-gray-200)80%, transparent)
        }
    }
    .border-gray-300 {
        border-color: var(--color-gray-300)
    }
    .border-gray-300\/80 {
        border-color: #d1d5dccc
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .border-gray-300\/80 {
            border-color: color-mix(in oklab, var(--color-gray-300)80%, transparent)
        }
    }
    .border-gray-400 {
        border-color: var(--color-gray-400)
    }
    .border-gray-500 {
        border-color: var(--color-gray-500)
    }
    .border-neutral {
        border-color: hsl(var(--color-neutral))
    }
    .border-red-500 {
        border-color: var(--color-red-500)
    }
    .border-white\/5 {
        border-color: #ffffff0d
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .border-white\/5 {
            border-color: color-mix(in oklab, var(--color-white)5%, transparent)
        }
    }
    .border-white\/10 {
        border-color: #ffffff1a
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .border-white\/10 {
            border-color: color-mix(in oklab, var(--color-white)10%, transparent)
        }
    }
    .border-yellow-500 {
        border-color: var(--color-yellow-500)
    }
    .\ !bg-background-secondary {
        background-color: hsl(var(--color-background-secondary)) !important
    }
    .bg-\[var\(--background\)\] {
        background-color: var(--background)
    }
    .bg-\[var\(--background-secondary\)\],
    .bg-\[var\(--background-secondary\)\]\/80 {
        background-color: var(--background-secondary)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .bg-\[var\(--background-secondary\)\]\/80 {
            background-color: color-mix(in oklab, var(--background-secondary)80%, transparent)
        }
    }
    .bg-\[var\(--iconbg1\)\] {
        background-color: var(--iconbg1)
    }
    .bg-\[var\(--iconbg2\)\] {
        background-color: var(--iconbg2)
    }
    .bg-\[var\(--iconbg3\)\] {
        background-color: var(--iconbg3)
    }
    .bg-\[var\(--primary\)\],
    .bg-\[var\(--primary\)\]\/10 {
        background-color: var(--primary)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .bg-\[var\(--primary\)\]\/10 {
            background-color: color-mix(in oklab, var(--primary)10%, transparent)
        }
    }
    .bg-\[var\(--primary\)\]\/12 {
        background-color: var(--primary)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .bg-\[var\(--primary\)\]\/12 {
            background-color: color-mix(in oklab, var(--primary)12%, transparent)
        }
    }
    .bg-\[var\(--primary\)\]\/15 {
        background-color: var(--primary)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .bg-\[var\(--primary\)\]\/15 {
            background-color: color-mix(in oklab, var(--primary)15%, transparent)
        }
    }
    .bg-\[var\(--primary\)\]\/20 {
        background-color: var(--primary)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .bg-\[var\(--primary\)\]\/20 {
            background-color: color-mix(in oklab, var(--primary)20%, transparent)
        }
    }
    .bg-\[var\(--primary\)\]\/30 {
        background-color: var(--primary)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .bg-\[var\(--primary\)\]\/30 {
            background-color: color-mix(in oklab, var(--primary)30%, transparent)
        }
    }
    .bg-\[var\(--secondary\)\]\/10 {
        background-color: var(--secondary)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .bg-\[var\(--secondary\)\]\/10 {
            background-color: color-mix(in oklab, var(--secondary)10%, transparent)
        }
    }
    .bg-\[var\(--secondary\)\]\/15 {
        background-color: var(--secondary)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .bg-\[var\(--secondary\)\]\/15 {
            background-color: color-mix(in oklab, var(--secondary)15%, transparent)
        }
    }
    .bg-\[var\(--secondary\)\]\/20 {
        background-color: var(--secondary)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .bg-\[var\(--secondary\)\]\/20 {
            background-color: color-mix(in oklab, var(--secondary)20%, transparent)
        }
    }
    .bg-\[var\(--secondary\)\]\/30 {
        background-color: var(--secondary)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .bg-\[var\(--secondary\)\]\/30 {
            background-color: color-mix(in oklab, var(--secondary)30%, transparent)
        }
    }
    .bg-\[var\(--secondary\)\]\/50 {
        background-color: var(--secondary)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .bg-\[var\(--secondary\)\]\/50 {
            background-color: color-mix(in oklab, var(--secondary)50%, transparent)
        }
    }
    .bg-\[var\(--secondary\)\]\/70 {
        background-color: var(--secondary)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .bg-\[var\(--secondary\)\]\/70 {
            background-color: color-mix(in oklab, var(--secondary)70%, transparent)
        }
    }
    .bg-background {
        background-color: hsl(var(--color-background))
    }
    .bg-background-secondary {
        background-color: hsl(var(--color-background-secondary))
    }
    .bg-background-secondary\/30 {
        background-color: color-mix(in srgb, hsl(hsl(var(--color-background-secondary)))30%, transparent)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .bg-background-secondary\/30 {
            background-color: color-mix(in oklab, hsl(var(--color-background-secondary))30%, transparent)
        }
    }
    .bg-background-secondary\/90 {
        background-color: color-mix(in srgb, hsl(hsl(var(--color-background-secondary)))90%, transparent)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .bg-background-secondary\/90 {
            background-color: color-mix(in oklab, hsl(var(--color-background-secondary))90%, transparent)
        }
    }
    .bg-background\/50 {
        background-color: color-mix(in srgb, hsl(hsl(var(--color-background)))50%, transparent)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .bg-background\/50 {
            background-color: color-mix(in oklab, hsl(var(--color-background))50%, transparent)
        }
    }
    .bg-black {
        background-color: var(--color-black)
    }
    .bg-black\/50 {
        background-color: #00000080
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .bg-black\/50 {
            background-color: color-mix(in oklab, var(--color-black)50%, transparent)
        }
    }
    .bg-blue-500\/10 {
        background-color: #3080ff1a
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .bg-blue-500\/10 {
            background-color: color-mix(in oklab, var(--color-blue-500)10%, transparent)
        }
    }
    .bg-gray-100\/80 {
        background-color: #f3f4f6cc
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .bg-gray-100\/80 {
            background-color: color-mix(in oklab, var(--color-gray-100)80%, transparent)
        }
    }
    .bg-gray-300 {
        background-color: var(--color-gray-300)
    }
    .bg-gray-300\/80 {
        background-color: #d1d5dccc
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .bg-gray-300\/80 {
            background-color: color-mix(in oklab, var(--color-gray-300)80%, transparent)
        }
    }
    .bg-gray-600 {
        background-color: var(--color-gray-600)
    }
    .bg-green-100 {
        background-color: var(--color-green-100)
    }
    .bg-green-900 {
        background-color: var(--color-green-900)
    }
    .bg-inactive\/20 {
        background-color: color-mix(in srgb, hsl(hsl(var(--color-inactive)))20%, transparent)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .bg-inactive\/20 {
            background-color: color-mix(in oklab, hsl(var(--color-inactive))20%, transparent)
        }
    }
    .bg-indigo-500\/10 {
        background-color: #625fff1a
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .bg-indigo-500\/10 {
            background-color: color-mix(in oklab, var(--color-indigo-500)10%, transparent)
        }
    }
    .bg-indigo-500\/20 {
        background-color: #625fff33
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .bg-indigo-500\/20 {
            background-color: color-mix(in oklab, var(--color-indigo-500)20%, transparent)
        }
    }
    .bg-indigo-600 {
        background-color: var(--color-indigo-600)
    }
    .bg-info\/20 {
        background-color: color-mix(in srgb, hsl(hsl(var(--color-info)))20%, transparent)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .bg-info\/20 {
            background-color: color-mix(in oklab, hsl(var(--color-info))20%, transparent)
        }
    }
    .bg-neutral {
        background-color: hsl(var(--color-neutral))
    }
    .bg-neutral-700 {
        background-color: var(--color-neutral-700)
    }
    .bg-orange-700 {
        background-color: var(--color-orange-700)
    }
    .bg-primary {
        background-color: hsl(var(--color-primary))
    }
    .bg-primary\/5 {
        background-color: color-mix(in srgb, hsl(hsl(var(--color-primary)))5%, transparent)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .bg-primary\/5 {
            background-color: color-mix(in oklab, hsl(var(--color-primary))5%, transparent)
        }
    }
    .bg-primary\/20 {
        background-color: color-mix(in srgb, hsl(hsl(var(--color-primary)))20%, transparent)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .bg-primary\/20 {
            background-color: color-mix(in oklab, hsl(var(--color-primary))20%, transparent)
        }
    }
    .bg-primary\/60 {
        background-color: color-mix(in srgb, hsl(hsl(var(--color-primary)))60%, transparent)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .bg-primary\/60 {
            background-color: color-mix(in oklab, hsl(var(--color-primary))60%, transparent)
        }
    }
    .bg-purple-500\/10 {
        background-color: #ac4bff1a
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .bg-purple-500\/10 {
            background-color: color-mix(in oklab, var(--color-purple-500)10%, transparent)
        }
    }
    .bg-purple-500\/20 {
        background-color: #ac4bff33
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .bg-purple-500\/20 {
            background-color: color-mix(in oklab, var(--color-purple-500)20%, transparent)
        }
    }
    .bg-red-100 {
        background-color: var(--color-red-100)
    }
    .bg-red-500 {
        background-color: var(--color-red-500)
    }
    .bg-red-500\/90 {
        background-color: #fb2c36e6
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .bg-red-500\/90 {
            background-color: color-mix(in oklab, var(--color-red-500)90%, transparent)
        }
    }
    .bg-red-600 {
        background-color: var(--color-red-600)
    }
    .bg-red-700 {
        background-color: var(--color-red-700)
    }
    .bg-red-900 {
        background-color: var(--color-red-900)
    }
    .bg-secondary {
        background-color: hsl(var(--color-secondary))
    }
    .bg-secondary\/10 {
        background-color: color-mix(in srgb, hsl(hsl(var(--color-secondary)))10%, transparent)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .bg-secondary\/10 {
            background-color: color-mix(in oklab, hsl(var(--color-secondary))10%, transparent)
        }
    }
    .bg-success\/20 {
        background-color: color-mix(in srgb, hsl(hsl(var(--color-success)))20%, transparent)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .bg-success\/20 {
            background-color: color-mix(in oklab, hsl(var(--color-success))20%, transparent)
        }
    }
    .bg-transparent {
        background-color: #0000
    }
    .bg-warning\/20 {
        background-color: color-mix(in srgb, hsl(hsl(var(--color-warning)))20%, transparent)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .bg-warning\/20 {
            background-color: color-mix(in oklab, hsl(var(--color-warning))20%, transparent)
        }
    }
    .bg-white {
        background-color: var(--color-white)
    }
    .bg-white\/10 {
        background-color: #ffffff1a
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .bg-white\/10 {
            background-color: color-mix(in oklab, var(--color-white)10%, transparent)
        }
    }
    .bg-white\/20 {
        background-color: #fff3
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .bg-white\/20 {
            background-color: color-mix(in oklab, var(--color-white)20%, transparent)
        }
    }
    .bg-white\/50 {
        background-color: #ffffff80
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .bg-white\/50 {
            background-color: color-mix(in oklab, var(--color-white)50%, transparent)
        }
    }
    .bg-white\/80 {
        background-color: #fffc
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .bg-white\/80 {
            background-color: color-mix(in oklab, var(--color-white)80%, transparent)
        }
    }
    .bg-yellow-600\/20 {
        background-color: #cd890033
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .bg-yellow-600\/20 {
            background-color: color-mix(in oklab, var(--color-yellow-600)20%, transparent)
        }
    }
    .bg-gradient-to-b {
        --tw-gradient-position: to bottom in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops))
    }
    .bg-gradient-to-br {
        --tw-gradient-position: to bottom right in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops))
    }
    .bg-gradient-to-r {
        --tw-gradient-position: to right in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops))
    }
    .bg-gradient-to-tr {
        --tw-gradient-position: to top right in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops))
    }
    .bg-none {
        background-image: none
    }
    .from-\[var\(--primary\)\],
    .from-\[var\(--primary\)\]\/0 {
        --tw-gradient-from: var(--primary);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .from-\[var\(--primary\)\]\/0 {
            --tw-gradient-from: color-mix(in oklab, var(--primary)0%, transparent)
        }
    }
    .from-\[var\(--secondary\)\] {
        --tw-gradient-from: var(--secondary);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    .from-background {
        --tw-gradient-from: hsl(var(--color-background));
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    .from-blue-500 {
        --tw-gradient-from: var(--color-blue-500);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    .from-blue-500\/10 {
        --tw-gradient-from: #3080ff1a;
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .from-blue-500\/10 {
            --tw-gradient-from: color-mix(in oklab, var(--color-blue-500)10%, transparent)
        }
    }
    .from-gray-500\/10 {
        --tw-gradient-from: #6a72821a;
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .from-gray-500\/10 {
            --tw-gradient-from: color-mix(in oklab, var(--color-gray-500)10%, transparent)
        }
    }
    .from-green-500\/10 {
        --tw-gradient-from: #00c7581a;
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .from-green-500\/10 {
            --tw-gradient-from: color-mix(in oklab, var(--color-green-500)10%, transparent)
        }
    }
    .from-indigo-50 {
        --tw-gradient-from: var(--color-indigo-50);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    .from-indigo-500\/10 {
        --tw-gradient-from: #625fff1a;
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .from-indigo-500\/10 {
            --tw-gradient-from: color-mix(in oklab, var(--color-indigo-500)10%, transparent)
        }
    }
    .from-indigo-600 {
        --tw-gradient-from: var(--color-indigo-600);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    .from-primary {
        --tw-gradient-from: hsl(var(--color-primary));
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    .from-primary\/10 {
        --tw-gradient-from: color-mix(in srgb, hsl(hsl(var(--color-primary)))10%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .from-primary\/10 {
            --tw-gradient-from: color-mix(in oklab, hsl(var(--color-primary))10%, transparent)
        }
    }
    .from-purple-500 {
        --tw-gradient-from: var(--color-purple-500);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    .from-purple-500\/10 {
        --tw-gradient-from: #ac4bff1a;
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .from-purple-500\/10 {
            --tw-gradient-from: color-mix(in oklab, var(--color-purple-500)10%, transparent)
        }
    }
    .from-secondary {
        --tw-gradient-from: hsl(var(--color-secondary));
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    .from-transparent {
        --tw-gradient-from: transparent;
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    .via-\[var\(--primary\)\] {
        --tw-gradient-via: var(--primary);
        --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-via)var(--tw-gradient-via-position), var(--tw-gradient-to)var(--tw-gradient-to-position);
        --tw-gradient-stops: var(--tw-gradient-via-stops)
    }
    .via-secondary {
        --tw-gradient-via: hsl(var(--color-secondary));
        --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-via)var(--tw-gradient-via-position), var(--tw-gradient-to)var(--tw-gradient-to-position);
        --tw-gradient-stops: var(--tw-gradient-via-stops)
    }
    .via-transparent {
        --tw-gradient-via: transparent;
        --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-via)var(--tw-gradient-via-position), var(--tw-gradient-to)var(--tw-gradient-to-position);
        --tw-gradient-stops: var(--tw-gradient-via-stops)
    }
    .via-20\% {
        --tw-gradient-via-position: 20%
    }
    .via-50\% {
        --tw-gradient-via-position: 50%
    }
    .to-\[\#5573FD80\] {
        --tw-gradient-to: #5573fd80;
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    .to-\[var\(--accent\)\] {
        --tw-gradient-to: var(--accent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    .to-\[var\(--secondary\)\],
    .to-\[var\(--secondary\)\]\/0 {
        --tw-gradient-to: var(--secondary);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .to-\[var\(--secondary\)\]\/0 {
            --tw-gradient-to: color-mix(in oklab, var(--secondary)0%, transparent)
        }
    }
    .to-background\/70 {
        --tw-gradient-to: color-mix(in srgb, hsl(hsl(var(--color-background)))70%, transparent);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .to-background\/70 {
            --tw-gradient-to: color-mix(in oklab, hsl(var(--color-background))70%, transparent)
        }
    }
    .to-blue-500 {
        --tw-gradient-to: var(--color-blue-500);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    .to-cyan-400 {
        --tw-gradient-to: var(--color-cyan-400);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    .to-cyan-400\/10 {
        --tw-gradient-to: #00d2ef1a;
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .to-cyan-400\/10 {
            --tw-gradient-to: color-mix(in oklab, var(--color-cyan-400)10%, transparent)
        }
    }
    .to-cyan-500\/10 {
        --tw-gradient-to: #00b7d71a;
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .to-cyan-500\/10 {
            --tw-gradient-to: color-mix(in oklab, var(--color-cyan-500)10%, transparent)
        }
    }
    .to-gray-400\/10 {
        --tw-gradient-to: #99a1af1a;
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .to-gray-400\/10 {
            --tw-gradient-to: color-mix(in oklab, var(--color-gray-400)10%, transparent)
        }
    }
    .to-pink-500 {
        --tw-gradient-to: var(--color-pink-500);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    .to-pink-500\/10 {
        --tw-gradient-to: #f6339a1a;
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .to-pink-500\/10 {
            --tw-gradient-to: color-mix(in oklab, var(--color-pink-500)10%, transparent)
        }
    }
    .to-primary {
        --tw-gradient-to: hsl(var(--color-primary));
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    .to-purple-50 {
        --tw-gradient-to: var(--color-purple-50);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    .to-purple-500\/10 {
        --tw-gradient-to: #ac4bff1a;
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .to-purple-500\/10 {
            --tw-gradient-to: color-mix(in oklab, var(--color-purple-500)10%, transparent)
        }
    }
    .to-purple-600 {
        --tw-gradient-to: var(--color-purple-600);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    .to-secondary {
        --tw-gradient-to: hsl(var(--color-secondary));
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    .to-transparent {
        --tw-gradient-to: transparent;
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    .bg-clip-text {
        -webkit-background-clip: text;
        background-clip: text
    }
    .mask-repeat {
        -webkit-mask-repeat: repeat;
        mask-repeat: repeat
    }
    .\ !fill-white {
        fill: var(--color-white) !important
    }
    .fill-background {
        fill: hsl(var(--color-background))
    }
    .fill-base\/50 {
        fill: color-mix(in srgb, hsl(hsl(var(--color-base)))50%, transparent)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .fill-base\/50 {
            fill: color-mix(in oklab, hsl(var(--color-base))50%, transparent)
        }
    }
    .fill-black {
        fill: var(--color-black)
    }
    .fill-secondary {
        fill: hsl(var(--color-secondary))
    }
    .object-contain {
        object-fit: contain
    }
    .object-cover {
        object-fit: cover
    }
    .object-center {
        object-position: center
    }
    .p-0 {
        padding: calc(var(--spacing)*0)
    }
    .p-0\.5 {
        padding: calc(var(--spacing)*.5)
    }
    .p-1 {
        padding: calc(var(--spacing)*1)
    }
    .p-2 {
        padding: calc(var(--spacing)*2)
    }
    .p-3 {
        padding: calc(var(--spacing)*3)
    }
    .p-4 {
        padding: calc(var(--spacing)*4)
    }
    .p-6 {
        padding: calc(var(--spacing)*6)
    }
    .p-7 {
        padding: calc(var(--spacing)*7)
    }
    .p-10 {
        padding: calc(var(--spacing)*10)
    }
    .p-12 {
        padding: calc(var(--spacing)*12)
    }
    .\ !px-3 {
        padding-inline: calc(var(--spacing)*3) !important
    }
    .px-2 {
        padding-inline: calc(var(--spacing)*2)
    }
    .px-2\.5 {
        padding-inline: calc(var(--spacing)*2.5)
    }
    .px-3 {
        padding-inline: calc(var(--spacing)*3)
    }
    .px-4 {
        padding-inline: calc(var(--spacing)*4)
    }
    .px-4\.5 {
        padding-inline: calc(var(--spacing)*4.5)
    }
    .px-5 {
        padding-inline: calc(var(--spacing)*5)
    }
    .px-6 {
        padding-inline: calc(var(--spacing)*6)
    }
    .px-8 {
        padding-inline: calc(var(--spacing)*8)
    }
    .\ !py-1\.5 {
        padding-block: calc(var(--spacing)*1.5) !important
    }
    .py-0\.5 {
        padding-block: calc(var(--spacing)*.5)
    }
    .py-1 {
        padding-block: calc(var(--spacing)*1)
    }
    .py-2 {
        padding-block: calc(var(--spacing)*2)
    }
    .py-2\.5 {
        padding-block: calc(var(--spacing)*2.5)
    }
    .py-3 {
        padding-block: calc(var(--spacing)*3)
    }
    .py-3\.5 {
        padding-block: calc(var(--spacing)*3.5)
    }
    .py-4 {
        padding-block: calc(var(--spacing)*4)
    }
    .py-6 {
        padding-block: calc(var(--spacing)*6)
    }
    .py-8 {
        padding-block: calc(var(--spacing)*8)
    }
    .py-10 {
        padding-block: calc(var(--spacing)*10)
    }
    .py-12 {
        padding-block: calc(var(--spacing)*12)
    }
    .pt-0 {
        padding-top: calc(var(--spacing)*0)
    }
    .pt-4 {
        padding-top: calc(var(--spacing)*4)
    }
    .pt-6 {
        padding-top: calc(var(--spacing)*6)
    }
    .pt-8 {
        padding-top: calc(var(--spacing)*8)
    }
    .pt-10 {
        padding-top: calc(var(--spacing)*10)
    }
    .pt-12 {
        padding-top: calc(var(--spacing)*12)
    }
    .pt-\[6px\] {
        padding-top: 6px
    }
    .pr-2 {
        padding-right: calc(var(--spacing)*2)
    }
    .pr-4 {
        padding-right: calc(var(--spacing)*4)
    }
    .pr-10 {
        padding-right: calc(var(--spacing)*10)
    }
    .pr-44 {
        padding-right: calc(var(--spacing)*44)
    }
    .pb-1 {
        padding-bottom: calc(var(--spacing)*1)
    }
    .pb-2 {
        padding-bottom: calc(var(--spacing)*2)
    }
    .pb-3 {
        padding-bottom: calc(var(--spacing)*3)
    }
    .pb-4 {
        padding-bottom: calc(var(--spacing)*4)
    }
    .pb-6 {
        padding-bottom: calc(var(--spacing)*6)
    }
    .pb-7 {
        padding-bottom: calc(var(--spacing)*7)
    }
    .pb-8 {
        padding-bottom: calc(var(--spacing)*8)
    }
    .pb-10 {
        padding-bottom: calc(var(--spacing)*10)
    }
    .pl-2 {
        padding-left: calc(var(--spacing)*2)
    }
    .pl-3 {
        padding-left: calc(var(--spacing)*3)
    }
    .pl-8 {
        padding-left: calc(var(--spacing)*8)
    }
    .text-center {
        text-align: center
    }
    .text-justify {
        text-align: justify
    }
    .text-left {
        text-align: left
    }
    .text-right {
        text-align: right
    }
    .align-middle {
        vertical-align: middle
    }
    .text-2xl {
        font-size: var(--text-2xl);
        line-height: var(--tw-leading, var(--text-2xl--line-height))
    }
    .text-3xl {
        font-size: var(--text-3xl);
        line-height: var(--tw-leading, var(--text-3xl--line-height))
    }
    .text-4xl {
        font-size: var(--text-4xl);
        line-height: var(--tw-leading, var(--text-4xl--line-height))
    }
    .text-5xl {
        font-size: var(--text-5xl);
        line-height: var(--tw-leading, var(--text-5xl--line-height))
    }
    .text-lg {
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height))
    }
    .text-sm {
        font-size: var(--text-sm);
        line-height: var(--tw-leading, var(--text-sm--line-height))
    }
    .text-xl {
        font-size: var(--text-xl);
        line-height: var(--tw-leading, var(--text-xl--line-height))
    }
    .text-xs {
        font-size: var(--text-xs);
        line-height: var(--tw-leading, var(--text-xs--line-height))
    }
    .leading-6 {
        --tw-leading: calc(var(--spacing)*6);
        line-height: calc(var(--spacing)*6)
    }
    .leading-none {
        --tw-leading: 1;
        line-height: 1
    }
    .leading-relaxed {
        --tw-leading: var(--leading-relaxed);
        line-height: var(--leading-relaxed)
    }
    .leading-tight {
        --tw-leading: var(--leading-tight);
        line-height: var(--leading-tight)
    }
    .font-bold {
        --tw-font-weight: var(--font-weight-bold);
        font-weight: var(--font-weight-bold)
    }
    .font-medium {
        --tw-font-weight: var(--font-weight-medium);
        font-weight: var(--font-weight-medium)
    }
    .font-normal {
        --tw-font-weight: var(--font-weight-normal);
        font-weight: var(--font-weight-normal)
    }
    .font-semibold {
        --tw-font-weight: var(--font-weight-semibold);
        font-weight: var(--font-weight-semibold)
    }
    .tracking-tight {
        --tw-tracking: var(--tracking-tight);
        letter-spacing: var(--tracking-tight)
    }
    .tracking-wide {
        --tw-tracking: var(--tracking-wide);
        letter-spacing: var(--tracking-wide)
    }
    .tracking-wider {
        --tw-tracking: var(--tracking-wider);
        letter-spacing: var(--tracking-wider)
    }
    .text-nowrap {
        text-wrap: nowrap
    }
    .text-wrap {
        text-wrap: wrap
    }
    .break-words {
        overflow-wrap: break-word
    }
    .break-all {
        word-break: break-all
    }
    .whitespace-nowrap {
        white-space: nowrap
    }
    .text-\[\#5865F2\] {
        color: #5865f2
    }
    .text-\[var\(--base\)\] {
        color: var(--base)
    }
    .text-\[var\(--fmh-text-primary\)\] {
        color: var(--fmh-text-primary)
    }
    .text-\[var\(--fmh-text-secondary\)\] {
        color: var(--fmh-text-secondary)
    }
    .text-\[var\(--fmh-text-tertiary\)\] {
        color: var(--fmh-text-tertiary)
    }
    .text-\[var\(--icon1\)\] {
        color: var(--icon1)
    }
    .text-\[var\(--icon2\)\] {
        color: var(--icon2)
    }
    .text-\[var\(--icon3\)\] {
        color: var(--icon3)
    }
    .text-\[var\(--inverted\)\] {
        color: var(--inverted)
    }
    .text-\[var\(--muted\)\] {
        color: var(--muted)
    }
    .text-\[var\(--primary\)\] {
        color: var(--primary)
    }
    .text-base {
        color: hsl(var(--color-base))
    }
    .text-base\/20 {
        color: color-mix(in srgb, hsl(hsl(var(--color-base)))20%, transparent)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .text-base\/20 {
            color: color-mix(in oklab, hsl(var(--color-base))20%, transparent)
        }
    }
    .text-base\/50 {
        color: color-mix(in srgb, hsl(hsl(var(--color-base)))50%, transparent)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .text-base\/50 {
            color: color-mix(in oklab, hsl(var(--color-base))50%, transparent)
        }
    }
    .text-base\/60 {
        color: color-mix(in srgb, hsl(hsl(var(--color-base)))60%, transparent)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .text-base\/60 {
            color: color-mix(in oklab, hsl(var(--color-base))60%, transparent)
        }
    }
    .text-base\/70 {
        color: color-mix(in srgb, hsl(hsl(var(--color-base)))70%, transparent)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .text-base\/70 {
            color: color-mix(in oklab, hsl(var(--color-base))70%, transparent)
        }
    }
    .text-base\/80 {
        color: color-mix(in srgb, hsl(hsl(var(--color-base)))80%, transparent)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .text-base\/80 {
            color: color-mix(in oklab, hsl(var(--color-base))80%, transparent)
        }
    }
    .text-black {
        color: var(--color-black)
    }
    .text-blue-500 {
        color: var(--color-blue-500)
    }
    .text-blue-600 {
        color: var(--color-blue-600)
    }
    .text-blue-700 {
        color: var(--color-blue-700)
    }
    .text-current {
        color: currentColor
    }
    .text-cyan-500 {
        color: var(--color-cyan-500)
    }
    .text-error\/80 {
        color: color-mix(in srgb, hsl(hsl(var(--color-error)))80%, transparent)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .text-error\/80 {
            color: color-mix(in oklab, hsl(var(--color-error))80%, transparent)
        }
    }
    .text-gray-100 {
        color: var(--color-gray-100)
    }
    .text-gray-200 {
        color: var(--color-gray-200)
    }
    .text-gray-300 {
        color: var(--color-gray-300)
    }
    .text-gray-400 {
        color: var(--color-gray-400)
    }
    .text-gray-500 {
        color: var(--color-gray-500)
    }
    .text-gray-600 {
        color: var(--color-gray-600)
    }
    .text-gray-700 {
        color: var(--color-gray-700)
    }
    .text-gray-800 {
        color: var(--color-gray-800)
    }
    .text-gray-900 {
        color: var(--color-gray-900)
    }
    .text-gray-950 {
        color: var(--color-gray-950)
    }
    .text-green-300 {
        color: var(--color-green-300)
    }
    .text-green-500 {
        color: var(--color-green-500)
    }
    .text-green-600 {
        color: var(--color-green-600)
    }
    .text-green-700 {
        color: var(--color-green-700)
    }
    .text-green-800 {
        color: var(--color-green-800)
    }
    .text-inactive {
        color: hsl(var(--color-inactive))
    }
    .text-indigo-400 {
        color: var(--color-indigo-400)
    }
    .text-indigo-500 {
        color: var(--color-indigo-500)
    }
    .text-indigo-600 {
        color: var(--color-indigo-600)
    }
    .text-indigo-700 {
        color: var(--color-indigo-700)
    }
    .text-info {
        color: hsl(var(--color-info))
    }
    .text-neutral-400 {
        color: var(--color-neutral-400)
    }
    .text-orange-500 {
        color: var(--color-orange-500)
    }
    .text-pink-500 {
        color: var(--color-pink-500)
    }
    .text-pink-600 {
        color: var(--color-pink-600)
    }
    .text-pink-700 {
        color: var(--color-pink-700)
    }
    .text-primary {
        color: hsl(var(--color-primary))
    }
    .text-purple-500 {
        color: var(--color-purple-500)
    }
    .text-purple-600 {
        color: var(--color-purple-600)
    }
    .text-purple-700 {
        color: var(--color-purple-700)
    }
    .text-red-300 {
        color: var(--color-red-300)
    }
    .text-red-500 {
        color: var(--color-red-500)
    }
    .text-red-600 {
        color: var(--color-red-600)
    }
    .text-red-700 {
        color: var(--color-red-700)
    }
    .text-red-800 {
        color: var(--color-red-800)
    }
    .text-secondary {
        color: hsl(var(--color-secondary))
    }
    .text-success {
        color: hsl(var(--color-success))
    }
    .text-teal-500 {
        color: var(--color-teal-500)
    }
    .text-teal-600 {
        color: var(--color-teal-600)
    }
    .text-teal-700 {
        color: var(--color-teal-700)
    }
    .text-transparent {
        color: #0000
    }
    .text-warning {
        color: hsl(var(--color-warning))
    }
    .text-white {
        color: var(--color-white)
    }
    .text-yellow-300 {
        color: var(--color-yellow-300)
    }
    .text-yellow-500 {
        color: var(--color-yellow-500)
    }
    .text-yellow-600 {
        color: var(--color-yellow-600)
    }
    .text-yellow-700 {
        color: var(--color-yellow-700)
    }
    .capitalize {
        text-transform: capitalize
    }
    .lowercase {
        text-transform: lowercase
    }
    .uppercase {
        text-transform: uppercase
    }
    .italic {
        font-style: italic
    }
    .ordinal {
        --tw-ordinal: ordinal;
        font-variant-numeric: var(--tw-ordinal, )var(--tw-slashed-zero, )var(--tw-numeric-figure, )var(--tw-numeric-spacing, )var(--tw-numeric-fraction, )
    }
    .line-through {
        text-decoration-line: line-through
    }
    .overline {
        text-decoration-line: overline
    }
    .underline {
        text-decoration-line: underline
    }
    .underline-offset-2 {
        text-underline-offset: 2px
    }
    .antialiased {
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale
    }
    .subpixel-antialiased {
        -webkit-font-smoothing: auto;
        -moz-osx-font-smoothing: auto
    }
    .opacity-0 {
        opacity: 0
    }
    .opacity-25 {
        opacity: .25
    }
    .opacity-40 {
        opacity: .4
    }
    .opacity-50 {
        opacity: .5
    }
    .opacity-60 {
        opacity: .6
    }
    .opacity-70 {
        opacity: .7
    }
    .opacity-75 {
        opacity: .75
    }
    .opacity-80 {
        opacity: .8
    }
    .opacity-100 {
        opacity: 1
    }
    .mix-blend-overlay {
        mix-blend-mode: overlay
    }
    .shadow {
        --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, #0000001a), 0 1px 2px -1px var(--tw-shadow-color, #0000001a);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
    }
    .shadow-2xl {
        --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, #00000040);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
    }
    .shadow-inner {
        --tw-shadow: inset 0 2px 4px 0 var(--tw-shadow-color, #0000000d);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
    }
    .shadow-lg {
        --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, #0000001a), 0 4px 6px -4px var(--tw-shadow-color, #0000001a);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
    }
    .shadow-md {
        --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, #0000001a), 0 2px 4px -2px var(--tw-shadow-color, #0000001a);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
    }
    .shadow-sm {
        --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, #0000001a), 0 1px 2px -1px var(--tw-shadow-color, #0000001a);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
    }
    .shadow-xl {
        --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, #0000001a), 0 8px 10px -6px var(--tw-shadow-color, #0000001a);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
    }
    .ring,
    .ring-1 {
        --tw-ring-shadow: var(--tw-ring-inset, )0 0 0 calc(1px + var(--tw-ring-offset-width))var(--tw-ring-color, currentcolor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
    }
    .ring-2 {
        --tw-ring-shadow: var(--tw-ring-inset, )0 0 0 calc(2px + var(--tw-ring-offset-width))var(--tw-ring-color, currentcolor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
    }
    .shadow-blue-500\/30 {
        --tw-shadow-color: #3080ff4d
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .shadow-blue-500\/30 {
            --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-blue-500)30%, transparent)var(--tw-shadow-alpha), transparent)
        }
    }
    .shadow-primary\/30 {
        --tw-shadow-color: color-mix(in srgb, hsl(hsl(var(--color-primary)))30%, transparent)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .shadow-primary\/30 {
            --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, hsl(var(--color-primary))30%, transparent)var(--tw-shadow-alpha), transparent)
        }
    }
    .shadow-purple-500\/30 {
        --tw-shadow-color: #ac4bff4d
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .shadow-purple-500\/30 {
            --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-purple-500)30%, transparent)var(--tw-shadow-alpha), transparent)
        }
    }
    .ring-gray-950\/5 {
        --tw-ring-color: #0307120d
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .ring-gray-950\/5 {
            --tw-ring-color: color-mix(in oklab, var(--color-gray-950)5%, transparent)
        }
    }
    .ring-neutral-800 {
        --tw-ring-color: var(--color-neutral-800)
    }
    .ring-offset-2 {
        --tw-ring-offset-width: 2px;
        --tw-ring-offset-shadow: var(--tw-ring-inset, )0 0 0 var(--tw-ring-offset-width)var(--tw-ring-offset-color)
    }
    .outline {
        outline-style: var(--tw-outline-style);
        outline-width: 1px
    }
    .blur {
        --tw-blur: blur(8px);
        filter: var(--tw-blur, )var(--tw-brightness, )var(--tw-contrast, )var(--tw-grayscale, )var(--tw-hue-rotate, )var(--tw-invert, )var(--tw-saturate, )var(--tw-sepia, )var(--tw-drop-shadow, )
    }
    .drop-shadow {
        --tw-drop-shadow-size: drop-shadow(0 1px 2px var(--tw-drop-shadow-color, #0000001a))drop-shadow(0 1px 1px var(--tw-drop-shadow-color, #0000000f));
        --tw-drop-shadow: drop-shadow(0 1px 2px #0000001a)drop-shadow(0 1px 1px #0000000f);
        filter: var(--tw-blur, )var(--tw-brightness, )var(--tw-contrast, )var(--tw-grayscale, )var(--tw-hue-rotate, )var(--tw-invert, )var(--tw-saturate, )var(--tw-sepia, )var(--tw-drop-shadow, )
    }
    .grayscale {
        --tw-grayscale: grayscale(100%);
        filter: var(--tw-blur, )var(--tw-brightness, )var(--tw-contrast, )var(--tw-grayscale, )var(--tw-hue-rotate, )var(--tw-invert, )var(--tw-saturate, )var(--tw-sepia, )var(--tw-drop-shadow, )
    }
    .invert {
        --tw-invert: invert(100%);
        filter: var(--tw-blur, )var(--tw-brightness, )var(--tw-contrast, )var(--tw-grayscale, )var(--tw-hue-rotate, )var(--tw-invert, )var(--tw-saturate, )var(--tw-sepia, )var(--tw-drop-shadow, )
    }
    .sepia {
        --tw-sepia: sepia(100%);
        filter: var(--tw-blur, )var(--tw-brightness, )var(--tw-contrast, )var(--tw-grayscale, )var(--tw-hue-rotate, )var(--tw-invert, )var(--tw-saturate, )var(--tw-sepia, )var(--tw-drop-shadow, )
    }
    .filter {
        filter: var(--tw-blur, )var(--tw-brightness, )var(--tw-contrast, )var(--tw-grayscale, )var(--tw-hue-rotate, )var(--tw-invert, )var(--tw-saturate, )var(--tw-sepia, )var(--tw-drop-shadow, )
    }
    .filter\ ! {
        filter: var(--tw-blur, )var(--tw-brightness, )var(--tw-contrast, )var(--tw-grayscale, )var(--tw-hue-rotate, )var(--tw-invert, )var(--tw-saturate, )var(--tw-sepia, )var(--tw-drop-shadow, ) !important
    }
    .backdrop-blur-sm {
        --tw-backdrop-blur: blur(var(--blur-sm));
        -webkit-backdrop-filter: var(--tw-backdrop-blur, )var(--tw-backdrop-brightness, )var(--tw-backdrop-contrast, )var(--tw-backdrop-grayscale, )var(--tw-backdrop-hue-rotate, )var(--tw-backdrop-invert, )var(--tw-backdrop-opacity, )var(--tw-backdrop-saturate, )var(--tw-backdrop-sepia, );
        backdrop-filter: var(--tw-backdrop-blur, )var(--tw-backdrop-brightness, )var(--tw-backdrop-contrast, )var(--tw-backdrop-grayscale, )var(--tw-backdrop-hue-rotate, )var(--tw-backdrop-invert, )var(--tw-backdrop-opacity, )var(--tw-backdrop-saturate, )var(--tw-backdrop-sepia, )
    }
    .backdrop-blur-xl {
        --tw-backdrop-blur: blur(var(--blur-xl));
        -webkit-backdrop-filter: var(--tw-backdrop-blur, )var(--tw-backdrop-brightness, )var(--tw-backdrop-contrast, )var(--tw-backdrop-grayscale, )var(--tw-backdrop-hue-rotate, )var(--tw-backdrop-invert, )var(--tw-backdrop-opacity, )var(--tw-backdrop-saturate, )var(--tw-backdrop-sepia, );
        backdrop-filter: var(--tw-backdrop-blur, )var(--tw-backdrop-brightness, )var(--tw-backdrop-contrast, )var(--tw-backdrop-grayscale, )var(--tw-backdrop-hue-rotate, )var(--tw-backdrop-invert, )var(--tw-backdrop-opacity, )var(--tw-backdrop-saturate, )var(--tw-backdrop-sepia, )
    }
    .backdrop-blur-xs {
        --tw-backdrop-blur: blur(var(--blur-xs));
        -webkit-backdrop-filter: var(--tw-backdrop-blur, )var(--tw-backdrop-brightness, )var(--tw-backdrop-contrast, )var(--tw-backdrop-grayscale, )var(--tw-backdrop-hue-rotate, )var(--tw-backdrop-invert, )var(--tw-backdrop-opacity, )var(--tw-backdrop-saturate, )var(--tw-backdrop-sepia, );
        backdrop-filter: var(--tw-backdrop-blur, )var(--tw-backdrop-brightness, )var(--tw-backdrop-contrast, )var(--tw-backdrop-grayscale, )var(--tw-backdrop-hue-rotate, )var(--tw-backdrop-invert, )var(--tw-backdrop-opacity, )var(--tw-backdrop-saturate, )var(--tw-backdrop-sepia, )
    }
    .backdrop-filter {
        -webkit-backdrop-filter: var(--tw-backdrop-blur, )var(--tw-backdrop-brightness, )var(--tw-backdrop-contrast, )var(--tw-backdrop-grayscale, )var(--tw-backdrop-hue-rotate, )var(--tw-backdrop-invert, )var(--tw-backdrop-opacity, )var(--tw-backdrop-saturate, )var(--tw-backdrop-sepia, );
        backdrop-filter: var(--tw-backdrop-blur, )var(--tw-backdrop-brightness, )var(--tw-backdrop-contrast, )var(--tw-backdrop-grayscale, )var(--tw-backdrop-hue-rotate, )var(--tw-backdrop-invert, )var(--tw-backdrop-opacity, )var(--tw-backdrop-saturate, )var(--tw-backdrop-sepia, )
    }
    .transition {
        transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration))
    }
    .transition-all {
        transition-property: all;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration))
    }
    .transition-colors {
        transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration))
    }
    .transition-opacity {
        transition-property: opacity;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration))
    }
    .transition-transform {
        transition-property: transform, translate, scale, rotate;
        transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
        transition-duration: var(--tw-duration, var(--default-transition-duration))
    }
    .delay-150 {
        transition-delay: .15s
    }
    .delay-200 {
        transition-delay: .2s
    }
    .duration-75 {
        --tw-duration: 75ms;
        transition-duration: 75ms
    }
    .duration-100 {
        --tw-duration: .1s;
        transition-duration: .1s
    }
    .duration-150 {
        --tw-duration: .15s;
        transition-duration: .15s
    }
    .duration-200 {
        --tw-duration: .2s;
        transition-duration: .2s
    }
    .duration-250 {
        --tw-duration: .25s;
        transition-duration: .25s
    }
    .duration-300 {
        --tw-duration: .3s;
        transition-duration: .3s
    }
    .duration-500 {
        --tw-duration: .5s;
        transition-duration: .5s
    }
    .duration-700 {
        --tw-duration: .7s;
        transition-duration: .7s
    }
    .duration-1000 {
        --tw-duration: 1s;
        transition-duration: 1s
    }
    .ease-in {
        --tw-ease: var(--ease-in);
        transition-timing-function: var(--ease-in)
    }
    .ease-in-out {
        --tw-ease: var(--ease-in-out);
        transition-timing-function: var(--ease-in-out)
    }
    .ease-out {
        --tw-ease: var(--ease-out);
        transition-timing-function: var(--ease-out)
    }
    .will-change-\[left\] {
        will-change: left
    }
    .will-change-\[width\] {
        will-change: width
    }
    .prose-gray {
        --tw-prose-body: oklch(37.3% .034 259.733);
        --tw-prose-headings: oklch(21% .034 264.665);
        --tw-prose-lead: oklch(44.6% .03 256.802);
        --tw-prose-links: oklch(21% .034 264.665);
        --tw-prose-bold: oklch(21% .034 264.665);
        --tw-prose-counters: oklch(55.1% .027 264.364);
        --tw-prose-bullets: oklch(87.2% .01 258.338);
        --tw-prose-hr: oklch(92.8% .006 264.531);
        --tw-prose-quotes: oklch(21% .034 264.665);
        --tw-prose-quote-borders: oklch(92.8% .006 264.531);
        --tw-prose-captions: oklch(55.1% .027 264.364);
        --tw-prose-kbd: oklch(21% .034 264.665);
        --tw-prose-kbd-shadows: NaN NaN NaN;
        --tw-prose-code: oklch(21% .034 264.665);
        --tw-prose-pre-code: oklch(92.8% .006 264.531);
        --tw-prose-pre-bg: oklch(27.8% .033 256.848);
        --tw-prose-th-borders: oklch(87.2% .01 258.338);
        --tw-prose-td-borders: oklch(92.8% .006 264.531);
        --tw-prose-invert-body: oklch(87.2% .01 258.338);
        --tw-prose-invert-headings: #fff;
        --tw-prose-invert-lead: oklch(70.7% .022 261.325);
        --tw-prose-invert-links: #fff;
        --tw-prose-invert-bold: #fff;
        --tw-prose-invert-counters: oklch(70.7% .022 261.325);
        --tw-prose-invert-bullets: oklch(44.6% .03 256.802);
        --tw-prose-invert-hr: oklch(37.3% .034 259.733);
        --tw-prose-invert-quotes: oklch(96.7% .003 264.542);
        --tw-prose-invert-quote-borders: oklch(37.3% .034 259.733);
        --tw-prose-invert-captions: oklch(70.7% .022 261.325);
        --tw-prose-invert-kbd: #fff;
        --tw-prose-invert-kbd-shadows: 255 255 255;
        --tw-prose-invert-code: #fff;
        --tw-prose-invert-pre-code: oklch(87.2% .01 258.338);
        --tw-prose-invert-pre-bg: #00000080;
        --tw-prose-invert-th-borders: oklch(44.6% .03 256.802);
        --tw-prose-invert-td-borders: oklch(37.3% .034 259.733)
    }
    .outline-none {
        --tw-outline-style: none;
        outline-style: none
    }
    .select-none {
        -webkit-user-select: none;
        user-select: none
    }
    .\[animation-delay\:200ms\] {
        animation-delay: .2s
    }
    .\[program\:nginx\] {
        program: nginx
    }
    .\[program\:php-fpm\] {
        program: php-fpm
    }
    .\[program\:queue-worker\] {
        program: queue-worker
    }
    .\[rpcinterface\:supervisor\] {
        rpcinterface: supervisor
    }
    @media (hover:hover) {
        .group-hover\:translate-x-1:is(:where(.group): hover *) {
            --tw-translate-x:calc(var(--spacing)*1);
            translate: var(--tw-translate-x)var(--tw-translate-y)
        }
        .group-hover\:-translate-y-0\.5:is(:where(.group):hover *) {
            --tw-translate-y: calc(var(--spacing)*-.5);
            translate: var(--tw-translate-x)var(--tw-translate-y)
        }
        .group-hover\:rotate-0:is(:where(.group):hover *) {
            rotate: none
        }
        .group-hover\:gap-3:is(:where(.group):hover *) {
            gap: calc(var(--spacing)*3)
        }
        .group-hover\:bg-\[var\(--primary\)\]:is(:where(.group):hover *) {
            background-color: var(--primary)
        }
        .group-hover\:from-\[var\(--primary\)\]\/5:is(:where(.group):hover *) {
            --tw-gradient-from: var(--primary);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
        }
        @supports (color:color-mix(in lab,
        red,
        red)) {
            .group-hover\:from-\[var\(--primary\)\]\/5:is(:where(.group): hover *) {
                --tw-gradient-from:color-mix(in oklab, var(--primary)5%, transparent)
            }
        }
        .group-hover\:to-\[var\(--secondary\)\]\/10:is(:where(.group):hover *) {
            --tw-gradient-to: var(--secondary);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
        }
        @supports (color:color-mix(in lab,
        red,
        red)) {
            .group-hover\:to-\[var\(--secondary\)\]\/10:is(:where(.group): hover *) {
                --tw-gradient-to:color-mix(in oklab, var(--secondary)10%, transparent)
            }
        }
        .group-hover\:text-\[\#4667FF\]:is(:where(.group):hover *) {
            color: #4667ff
        }
        .group-hover\:shadow-lg:is(:where(.group):hover *) {
            --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, #0000001a), 0 4px 6px -4px var(--tw-shadow-color, #0000001a);
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
        }
        .group-hover\:shadow-md:is(:where(.group):hover *) {
            --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, #0000001a), 0 2px 4px -2px var(--tw-shadow-color, #0000001a);
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
        }
    }
    .peer-checked\:border-secondary:is(:where(.peer):checked~*) {
        border-color: hsl(var(--color-secondary))
    }
    .before\:absolute:before {
        content: var(--tw-content);
        position: absolute
    }
    .before\:inset-0:before {
        content: var(--tw-content);
        inset: calc(var(--spacing)*0)
    }
    .before\:bg-primary:before {
        content: var(--tw-content);
        background-color: hsl(var(--color-primary))
    }
    .before\:\[mask-image\:_linear-gradient\(to_right\,
    theme\(colors\.white\)\,
    theme\(colors\.white\)_var\(--progress\)\,
    transparent_var\(--progress\)\)\]:before {
        content: var(--tw-content);
        -webkit-mask-image: linear-gradient(to right, #fff, #fff var(--progress), transparent var(--progress));
        mask-image: linear-gradient(to right, #fff, #fff var(--progress), transparent var(--progress))
    }
    @media (hover:hover) {
        .hover\:w-12:hover {
            width: calc(var(--spacing)*12)
        }
        .hover\:translate-x-1:hover {
            --tw-translate-x: calc(var(--spacing)*1);
            translate: var(--tw-translate-x)var(--tw-translate-y)
        }
        .hover\:-translate-y-0\.5:hover {
            --tw-translate-y: calc(var(--spacing)*-.5);
            translate: var(--tw-translate-x)var(--tw-translate-y)
        }
        .hover\:scale-105:hover {
            --tw-scale-x: 105%;
            --tw-scale-y: 105%;
            --tw-scale-z: 105%;
            scale: var(--tw-scale-x)var(--tw-scale-y)
        }
        .hover\:scale-110:hover {
            --tw-scale-x: 110%;
            --tw-scale-y: 110%;
            --tw-scale-z: 110%;
            scale: var(--tw-scale-x)var(--tw-scale-y)
        }
        .hover\:scale-\[1\.02\]:hover {
            scale: 1.02
        }
        .hover\:rotate-6:hover {
            rotate: 6deg
        }
        .hover\:border-\[var\(--primary\)\]\/30:hover {
            border-color: var(--primary)
        }
        @supports (color:color-mix(in lab,
        red,
        red)) {
            .hover\:border-\[var\(--primary\)\]\/30:hover {
                border-color: color-mix(in oklab, var(--primary)30%, transparent)
            }
        }
        .hover\:border-\[var\(--primary\)\]\/80:hover {
            border-color: var(--primary)
        }
        @supports (color:color-mix(in lab,
        red,
        red)) {
            .hover\:border-\[var\(--primary\)\]\/80:hover {
                border-color: color-mix(in oklab, var(--primary)80%, transparent)
            }
        }
        .hover\:bg-\[var\(--background-secondary\)\]:hover,
        .hover\:bg-\[var\(--background-secondary\)\]\/90:hover {
            background-color: var(--background-secondary)
        }
        @supports (color:color-mix(in lab,
        red,
        red)) {
            .hover\:bg-\[var\(--background-secondary\)\]\/90:hover {
                background-color: color-mix(in oklab, var(--background-secondary)90%, transparent)
            }
        }
        .hover\:bg-\[var\(--background-secondary\)\]\/95:hover {
            background-color: var(--background-secondary)
        }
        @supports (color:color-mix(in lab,
        red,
        red)) {
            .hover\:bg-\[var\(--background-secondary\)\]\/95:hover {
                background-color: color-mix(in oklab, var(--background-secondary)95%, transparent)
            }
        }
        .hover\:bg-\[var\(--neutral\)\]:hover {
            background-color: var(--neutral)
        }
        .hover\:bg-\[var\(--primary\)\]\/90:hover {
            background-color: var(--primary)
        }
        @supports (color:color-mix(in lab,
        red,
        red)) {
            .hover\:bg-\[var\(--primary\)\]\/90:hover {
                background-color: color-mix(in oklab, var(--primary)90%, transparent)
            }
        }
        .hover\:bg-background-secondary\/80:hover {
            background-color: color-mix(in srgb, hsl(hsl(var(--color-background-secondary)))80%, transparent)
        }
        @supports (color:color-mix(in lab,
        red,
        red)) {
            .hover\:bg-background-secondary\/80:hover {
                background-color: color-mix(in oklab, hsl(var(--color-background-secondary))80%, transparent)
            }
        }
        .hover\:bg-background-secondary\/90:hover {
            background-color: color-mix(in srgb, hsl(hsl(var(--color-background-secondary)))90%, transparent)
        }
        @supports (color:color-mix(in lab,
        red,
        red)) {
            .hover\:bg-background-secondary\/90:hover {
                background-color: color-mix(in oklab, hsl(var(--color-background-secondary))90%, transparent)
            }
        }
        .hover\:bg-gray-100:hover {
            background-color: var(--color-gray-100)
        }
        .hover\:bg-gray-200\/80:hover {
            background-color: #e5e7ebcc
        }
        @supports (color:color-mix(in lab,
        red,
        red)) {
            .hover\:bg-gray-200\/80:hover {
                background-color: color-mix(in oklab, var(--color-gray-200)80%, transparent)
            }
        }
        .hover\:bg-gray-700:hover {
            background-color: var(--color-gray-700)
        }
        .hover\:bg-indigo-700:hover {
            background-color: var(--color-indigo-700)
        }
        .hover\:bg-neutral:hover {
            background-color: hsl(var(--color-neutral))
        }
        .hover\:bg-neutral-700:hover {
            background-color: var(--color-neutral-700)
        }
        .hover\:bg-primary\/5:hover {
            background-color: color-mix(in srgb, hsl(hsl(var(--color-primary)))5%, transparent)
        }
        @supports (color:color-mix(in lab,
        red,
        red)) {
            .hover\:bg-primary\/5:hover {
                background-color: color-mix(in oklab, hsl(var(--color-primary))5%, transparent)
            }
        }
        .hover\:bg-primary\/10:hover {
            background-color: color-mix(in srgb, hsl(hsl(var(--color-primary)))10%, transparent)
        }
        @supports (color:color-mix(in lab,
        red,
        red)) {
            .hover\:bg-primary\/10:hover {
                background-color: color-mix(in oklab, hsl(var(--color-primary))10%, transparent)
            }
        }
        .hover\:bg-primary\/80:hover {
            background-color: color-mix(in srgb, hsl(hsl(var(--color-primary)))80%, transparent)
        }
        @supports (color:color-mix(in lab,
        red,
        red)) {
            .hover\:bg-primary\/80:hover {
                background-color: color-mix(in oklab, hsl(var(--color-primary))80%, transparent)
            }
        }
        .hover\:bg-primary\/90:hover {
            background-color: color-mix(in srgb, hsl(hsl(var(--color-primary)))90%, transparent)
        }
        @supports (color:color-mix(in lab,
        red,
        red)) {
            .hover\:bg-primary\/90:hover {
                background-color: color-mix(in oklab, hsl(var(--color-primary))90%, transparent)
            }
        }
        .hover\:bg-red-600:hover {
            background-color: var(--color-red-600)
        }
        .hover\:bg-secondary:hover {
            background-color: hsl(var(--color-secondary))
        }
        .hover\:from-\[var\(--primary\)\]\/90:hover {
            --tw-gradient-from: var(--primary);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
        }
        @supports (color:color-mix(in lab,
        red,
        red)) {
            .hover\:from-\[var\(--primary\)\]\/90:hover {
                --tw-gradient-from: color-mix(in oklab, var(--primary)90%, transparent)
            }
        }
        .hover\:from-indigo-700:hover {
            --tw-gradient-from: var(--color-indigo-700);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
        }
        .hover\:from-primary\/90:hover {
            --tw-gradient-from: color-mix(in srgb, hsl(hsl(var(--color-primary)))90%, transparent);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
        }
        @supports (color:color-mix(in lab,
        red,
        red)) {
            .hover\:from-primary\/90:hover {
                --tw-gradient-from: color-mix(in oklab, hsl(var(--color-primary))90%, transparent)
            }
        }
        .hover\:to-\[var\(--accent\)\]\/90:hover {
            --tw-gradient-to: var(--accent);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
        }
        @supports (color:color-mix(in lab,
        red,
        red)) {
            .hover\:to-\[var\(--accent\)\]\/90:hover {
                --tw-gradient-to: color-mix(in oklab, var(--accent)90%, transparent)
            }
        }
        .hover\:to-\[var\(--secondary\)\]\/90:hover {
            --tw-gradient-to: var(--secondary);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
        }
        @supports (color:color-mix(in lab,
        red,
        red)) {
            .hover\:to-\[var\(--secondary\)\]\/90:hover {
                --tw-gradient-to: color-mix(in oklab, var(--secondary)90%, transparent)
            }
        }
        .hover\:to-primary\/90:hover {
            --tw-gradient-to: color-mix(in srgb, hsl(hsl(var(--color-primary)))90%, transparent);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
        }
        @supports (color:color-mix(in lab,
        red,
        red)) {
            .hover\:to-primary\/90:hover {
                --tw-gradient-to: color-mix(in oklab, hsl(var(--color-primary))90%, transparent)
            }
        }
        .hover\:to-purple-700:hover {
            --tw-gradient-to: var(--color-purple-700);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
        }
        .hover\:to-secondary\/90:hover {
            --tw-gradient-to: color-mix(in srgb, hsl(hsl(var(--color-secondary)))90%, transparent);
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
        }
        @supports (color:color-mix(in lab,
        red,
        red)) {
            .hover\:to-secondary\/90:hover {
                --tw-gradient-to: color-mix(in oklab, hsl(var(--color-secondary))90%, transparent)
            }
        }
        .hover\:text-\[var\(--primary\)\]:hover,
        .hover\:text-\[var\(--primary\)\]\/80:hover {
            color: var(--primary)
        }
        @supports (color:color-mix(in lab,
        red,
        red)) {
            .hover\:text-\[var\(--primary\)\]\/80:hover {
                color: color-mix(in oklab, var(--primary)80%, transparent)
            }
        }
        .hover\:text-base:hover {
            color: hsl(var(--color-base))
        }
        .hover\:text-base\/80:hover {
            color: color-mix(in srgb, hsl(hsl(var(--color-base)))80%, transparent)
        }
        @supports (color:color-mix(in lab,
        red,
        red)) {
            .hover\:text-base\/80:hover {
                color: color-mix(in oklab, hsl(var(--color-base))80%, transparent)
            }
        }
        .hover\:text-blue-400:hover {
            color: var(--color-blue-400)
        }
        .hover\:text-error:hover {
            color: hsl(var(--color-error))
        }
        .hover\:text-gray-700:hover {
            color: var(--color-gray-700)
        }
        .hover\:text-indigo-800:hover {
            color: var(--color-indigo-800)
        }
        .hover\:text-primary:hover {
            color: hsl(var(--color-primary))
        }
        .hover\:text-primary\/80:hover {
            color: color-mix(in srgb, hsl(hsl(var(--color-primary)))80%, transparent)
        }
        @supports (color:color-mix(in lab,
        red,
        red)) {
            .hover\:text-primary\/80:hover {
                color: color-mix(in oklab, hsl(var(--color-primary))80%, transparent)
            }
        }
        .hover\:text-secondary:hover {
            color: hsl(var(--color-secondary))
        }
        .hover\:text-yellow-100:hover {
            color: var(--color-yellow-100)
        }
        .hover\:underline:hover {
            text-decoration-line: underline
        }
        .hover\:opacity-100:hover {
            opacity: 1
        }
        .hover\:shadow-\[var\(--primary\)\]\/30:hover {
            --tw-shadow-alpha: 30%;
            --tw-shadow: var(--primary);
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
        }
        .hover\:shadow-2xl:hover {
            --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, #00000040);
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
        }
        .hover\:shadow-lg:hover {
            --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, #0000001a), 0 4px 6px -4px var(--tw-shadow-color, #0000001a);
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
        }
        .hover\:shadow-md:hover {
            --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, #0000001a), 0 2px 4px -2px var(--tw-shadow-color, #0000001a);
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
        }
        .hover\:shadow-sm:hover {
            --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, #0000001a), 0 1px 2px -1px var(--tw-shadow-color, #0000001a);
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
        }
        .hover\:shadow-xl:hover {
            --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, #0000001a), 0 8px 10px -6px var(--tw-shadow-color, #0000001a);
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
        }
        .hover\:shadow-indigo-500\/30:hover {
            --tw-shadow-color: #625fff4d
        }
        @supports (color:color-mix(in lab,
        red,
        red)) {
            .hover\:shadow-indigo-500\/30:hover {
                --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-indigo-500)30%, transparent)var(--tw-shadow-alpha), transparent)
            }
        }
        .hover\:drop-shadow-lg:hover {
            --tw-drop-shadow-size: drop-shadow(0 4px 4px var(--tw-drop-shadow-color, #00000026));
            --tw-drop-shadow: drop-shadow(var(--drop-shadow-lg));
            filter: var(--tw-blur, )var(--tw-brightness, )var(--tw-contrast, )var(--tw-grayscale, )var(--tw-hue-rotate, )var(--tw-invert, )var(--tw-saturate, )var(--tw-sepia, )var(--tw-drop-shadow, )
        }
    }
    .focus\:border-\[var\(--primary\)\]:focus {
        border-color: var(--primary)
    }
    .focus\:border-indigo-300:focus {
        border-color: var(--color-indigo-300)
    }
    .focus\:border-indigo-500:focus {
        border-color: var(--color-indigo-500)
    }
    .focus\:border-secondary:focus {
        border-color: hsl(var(--color-secondary))
    }
    .focus\:ring:focus {
        --tw-ring-shadow: var(--tw-ring-inset, )0 0 0 calc(1px + var(--tw-ring-offset-width))var(--tw-ring-color, currentcolor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
    }
    .focus\:ring-2:focus {
        --tw-ring-shadow: var(--tw-ring-inset, )0 0 0 calc(2px + var(--tw-ring-offset-width))var(--tw-ring-color, currentcolor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
    }
    .focus\:ring-\[var\(--primary\)\]:focus {
        --tw-ring-color: var(--primary)
    }
    .focus\:ring-indigo-200:focus {
        --tw-ring-color: var(--color-indigo-200)
    }
    .focus\:ring-indigo-500:focus {
        --tw-ring-color: var(--color-indigo-500)
    }
    .focus\:ring-indigo-500\/50:focus {
        --tw-ring-color: #625fff80
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .focus\:ring-indigo-500\/50:focus {
            --tw-ring-color: color-mix(in oklab, var(--color-indigo-500)50%, transparent)
        }
    }
    .focus\:ring-neutral-800:focus {
        --tw-ring-color: var(--color-neutral-800)
    }
    .focus\:ring-primary\/50:focus {
        --tw-ring-color: color-mix(in srgb, hsl(hsl(var(--color-primary)))50%, transparent)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .focus\:ring-primary\/50:focus {
            --tw-ring-color: color-mix(in oklab, hsl(var(--color-primary))50%, transparent)
        }
    }
    .focus\:ring-secondary:focus {
        --tw-ring-color: hsl(var(--color-secondary))
    }
    .focus\:ring-offset-2:focus {
        --tw-ring-offset-width: 2px;
        --tw-ring-offset-shadow: var(--tw-ring-inset, )0 0 0 var(--tw-ring-offset-width)var(--tw-ring-offset-color)
    }
    .focus\:outline-none:focus {
        --tw-outline-style: none;
        outline-style: none
    }
    .focus-visible\:bg-gray-100:focus-visible {
        background-color: var(--color-gray-100)
    }
    .disabled\:cursor-not-allowed:disabled {
        cursor: not-allowed
    }
    .disabled\:bg-background-secondary\/50:disabled {
        background-color: color-mix(in srgb, hsl(hsl(var(--color-background-secondary)))50%, transparent)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .disabled\:bg-background-secondary\/50:disabled {
            background-color: color-mix(in oklab, hsl(var(--color-background-secondary))50%, transparent)
        }
    }
    .disabled\:bg-secondary:disabled {
        background-color: hsl(var(--color-secondary))
    }
    .disabled\:opacity-50:disabled {
        opacity: .5
    }
    @media (min-width:40rem) {
        .sm\:col-auto {
            grid-column: auto
        }
        .sm\:mt-0 {
            margin-top: calc(var(--spacing)*0)
        }
        .sm\:ml-auto {
            margin-left: auto
        }
        .sm\:flex {
            display: flex
        }
        .sm\:w-72 {
            width: calc(var(--spacing)*72)
        }
        .sm\:grid-cols-1 {
            grid-template-columns: repeat(1, minmax(0, 1fr))
        }
        .sm\:grid-cols-2 {
            grid-template-columns: repeat(2, minmax(0, 1fr))
        }
        .sm\:flex-row {
            flex-direction: row
        }
        .sm\:items-center {
            align-items: center
        }
        .sm\:px-5 {
            padding-inline: calc(var(--spacing)*5)
        }
        .sm\:px-6 {
            padding-inline: calc(var(--spacing)*6)
        }
        .sm\:px-8 {
            padding-inline: calc(var(--spacing)*8)
        }
        .sm\:px-14 {
            padding-inline: calc(var(--spacing)*14)
        }
        .sm\:px-16 {
            padding-inline: calc(var(--spacing)*16)
        }
        .sm\:text-right {
            text-align: right
        }
        .sm\:text-3xl {
            font-size: var(--text-3xl);
            line-height: var(--tw-leading, var(--text-3xl--line-height))
        }
    }
    @media (min-width:48rem) {
        .md\:order-last {
            order: 9999
        }
        .md\:col-span-1 {
            grid-column: span 1/span 1
        }
        .md\:col-span-2 {
            grid-column: span 2/span 2
        }
        .md\:col-span-3 {
            grid-column: span 3/span 3
        }
        .md\:mx-auto {
            margin-inline: auto
        }
        .md\:ml-64 {
            margin-left: calc(var(--spacing)*64)
        }
        .md\:block {
            display: block
        }
        .md\:flex {
            display: flex
        }
        .md\:grid {
            display: grid
        }
        .md\:hidden {
            display: none
        }
        .md\:h-14 {
            height: calc(var(--spacing)*14)
        }
        .md\:h-16 {
            height: calc(var(--spacing)*16)
        }
        .md\:grid-cols-2 {
            grid-template-columns: repeat(2, minmax(0, 1fr))
        }
        .md\:grid-cols-3 {
            grid-template-columns: repeat(3, minmax(0, 1fr))
        }
        .md\:grid-cols-4 {
            grid-template-columns: repeat(4, minmax(0, 1fr))
        }
        .md\:grid-cols-5 {
            grid-template-columns: repeat(5, minmax(0, 1fr))
        }
        .md\:flex-col {
            flex-direction: column
        }
        .md\:flex-row {
            flex-direction: row
        }
        .md\:items-center {
            align-items: center
        }
        .md\:p-8 {
            padding: calc(var(--spacing)*8)
        }
        .md\:px-4 {
            padding-inline: calc(var(--spacing)*4)
        }
        .md\:px-8 {
            padding-inline: calc(var(--spacing)*8)
        }
        .md\:text-2xl {
            font-size: var(--text-2xl);
            line-height: var(--tw-leading, var(--text-2xl--line-height))
        }
        .md\:text-5xl {
            font-size: var(--text-5xl);
            line-height: var(--tw-leading, var(--text-5xl--line-height))
        }
        .md\:text-6xl {
            font-size: var(--text-6xl);
            line-height: var(--tw-leading, var(--text-6xl--line-height))
        }
    }
    @media (min-width:64rem) {
        .lg\:mt-72 {
            margin-top: calc(var(--spacing)*72)
        }
        .lg\:flex {
            display: flex
        }
        .lg\:hidden {
            display: none
        }
        .lg\:grid-cols-2 {
            grid-template-columns: repeat(2, minmax(0, 1fr))
        }
        .lg\:grid-cols-3 {
            grid-template-columns: repeat(3, minmax(0, 1fr))
        }
        .lg\:grid-cols-4 {
            grid-template-columns: repeat(4, minmax(0, 1fr))
        }
        .lg\:px-4 {
            padding-inline: calc(var(--spacing)*4)
        }
        .lg\:px-8 {
            padding-inline: calc(var(--spacing)*8)
        }
        .lg\:px-10 {
            padding-inline: calc(var(--spacing)*10)
        }
        .lg\:px-12 {
            padding-inline: calc(var(--spacing)*12)
        }
        .lg\:py-2 {
            padding-block: calc(var(--spacing)*2)
        }
        .lg\:py-6 {
            padding-block: calc(var(--spacing)*6)
        }
    }
    @media (min-width:80rem) {
        .xl\:max-w-\[40\%\] {
            max-width: 40%
        }
        .xl\:max-w-\[60\%\] {
            max-width: 60%
        }
        .xl\:max-w-\[700px\] {
            max-width: 700px
        }
        .xl\:max-w-md {
            max-width: var(--container-md)
        }
    }
    .rtl\:right-0:where(:dir(rtl),
    [dir=rtl],
    [dir=rtl] *) {
        right: calc(var(--spacing)*0)
    }
    .rtl\:ml-0:where(:dir(rtl),
    [dir=rtl],
    [dir=rtl] *) {
        margin-left: calc(var(--spacing)*0)
    }
    .rtl\:ml-2:where(:dir(rtl),
    [dir=rtl],
    [dir=rtl] *) {
        margin-left: calc(var(--spacing)*2)
    }
    @media (min-width:48rem) {
        .rtl\:md\:mr-64:where(:dir(rtl),
        [dir=rtl],
        [dir=rtl] *) {
            margin-right: calc(var(--spacing)*64)
        }
    }
    .dark\:border:where(.dark,
    .dark *) {
        border-style: var(--tw-border-style);
        border-width: 1px
    }
    .dark\:border-\[var\(--dark-neutral\)\]:where(.dark,
    .dark *),
    .dark\:border-\[var\(--dark-neutral\)\]\/50:where(.dark,
    .dark *) {
        border-color: var(--dark-neutral)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .dark\:border-\[var\(--dark-neutral\)\]\/50:where(.dark,
        .dark *) {
            border-color: color-mix(in oklab, var(--dark-neutral)50%, transparent)
        }
    }
    .dark\:border-gray-600:where(.dark,
    .dark *) {
        border-color: var(--color-gray-600)
    }
    .dark\:border-gray-700:where(.dark,
    .dark *) {
        border-color: var(--color-gray-700)
    }
    .dark\:border-gray-700\/80:where(.dark,
    .dark *) {
        border-color: #364153cc
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .dark\:border-gray-700\/80:where(.dark,
        .dark *) {
            border-color: color-mix(in oklab, var(--color-gray-700)80%, transparent)
        }
    }
    .dark\:border-gray-800\/50:where(.dark,
    .dark *) {
        border-color: #1e293980
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .dark\:border-gray-800\/50:where(.dark,
        .dark *) {
            border-color: color-mix(in oklab, var(--color-gray-800)50%, transparent)
        }
    }
    .dark\:border-red-400:where(.dark,
    .dark *) {
        border-color: var(--color-red-400)
    }
    .dark\:bg-\[var\(--dark-background\)\]:where(.dark,
    .dark *),
    .dark\:bg-\[var\(--dark-background\)\]\/50:where(.dark,
    .dark *) {
        background-color: var(--dark-background)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .dark\:bg-\[var\(--dark-background\)\]\/50:where(.dark,
        .dark *) {
            background-color: color-mix(in oklab, var(--dark-background)50%, transparent)
        }
    }
    .dark\:bg-\[var\(--dark-background-secondary\)\]:where(.dark,
    .dark *),
    .dark\:bg-\[var\(--dark-background-secondary\)\]\/80:where(.dark,
    .dark *) {
        background-color: var(--dark-background-secondary)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .dark\:bg-\[var\(--dark-background-secondary\)\]\/80:where(.dark,
        .dark *) {
            background-color: color-mix(in oklab, var(--dark-background-secondary)80%, transparent)
        }
    }
    .dark\:bg-\[var\(--dark-background-secondary\)\]\/90:where(.dark,
    .dark *) {
        background-color: var(--dark-background-secondary)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .dark\:bg-\[var\(--dark-background-secondary\)\]\/90:where(.dark,
        .dark *) {
            background-color: color-mix(in oklab, var(--dark-background-secondary)90%, transparent)
        }
    }
    .dark\:bg-\[var\(--dark-iconbg1\)\]:where(.dark,
    .dark *) {
        background-color: var(--dark-iconbg1)
    }
    .dark\:bg-\[var\(--dark-iconbg2\)\]:where(.dark,
    .dark *) {
        background-color: var(--dark-iconbg2)
    }
    .dark\:bg-\[var\(--dark-iconbg3\)\]:where(.dark,
    .dark *) {
        background-color: var(--dark-iconbg3)
    }
    .dark\:bg-\[var\(--dark-neutral\)\]:where(.dark,
    .dark *) {
        background-color: var(--dark-neutral)
    }
    .dark\:bg-\[var\(--dark-primary\)\]\/10:where(.dark,
    .dark *) {
        background-color: var(--dark-primary)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .dark\:bg-\[var\(--dark-primary\)\]\/10:where(.dark,
        .dark *) {
            background-color: color-mix(in oklab, var(--dark-primary)10%, transparent)
        }
    }
    .dark\:bg-\[var\(--dark-primary\)\]\/12:where(.dark,
    .dark *) {
        background-color: var(--dark-primary)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .dark\:bg-\[var\(--dark-primary\)\]\/12:where(.dark,
        .dark *) {
            background-color: color-mix(in oklab, var(--dark-primary)12%, transparent)
        }
    }
    .dark\:bg-\[var\(--dark-primary\)\]\/15:where(.dark,
    .dark *) {
        background-color: var(--dark-primary)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .dark\:bg-\[var\(--dark-primary\)\]\/15:where(.dark,
        .dark *) {
            background-color: color-mix(in oklab, var(--dark-primary)15%, transparent)
        }
    }
    .dark\:bg-\[var\(--dark-primary\)\]\/20:where(.dark,
    .dark *) {
        background-color: var(--dark-primary)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .dark\:bg-\[var\(--dark-primary\)\]\/20:where(.dark,
        .dark *) {
            background-color: color-mix(in oklab, var(--dark-primary)20%, transparent)
        }
    }
    .dark\:bg-\[var\(--dark-primary\)\]\/30:where(.dark,
    .dark *) {
        background-color: var(--dark-primary)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .dark\:bg-\[var\(--dark-primary\)\]\/30:where(.dark,
        .dark *) {
            background-color: color-mix(in oklab, var(--dark-primary)30%, transparent)
        }
    }
    .dark\:bg-\[var\(--dark-secondary\)\]\/10:where(.dark,
    .dark *) {
        background-color: var(--dark-secondary)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .dark\:bg-\[var\(--dark-secondary\)\]\/10:where(.dark,
        .dark *) {
            background-color: color-mix(in oklab, var(--dark-secondary)10%, transparent)
        }
    }
    .dark\:bg-\[var\(--dark-secondary\)\]\/15:where(.dark,
    .dark *) {
        background-color: var(--dark-secondary)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .dark\:bg-\[var\(--dark-secondary\)\]\/15:where(.dark,
        .dark *) {
            background-color: color-mix(in oklab, var(--dark-secondary)15%, transparent)
        }
    }
    .dark\:bg-\[var\(--dark-secondary\)\]\/30:where(.dark,
    .dark *) {
        background-color: var(--dark-secondary)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .dark\:bg-\[var\(--dark-secondary\)\]\/30:where(.dark,
        .dark *) {
            background-color: color-mix(in oklab, var(--dark-secondary)30%, transparent)
        }
    }
    .dark\:bg-\[var\(--dark-secondary\)\]\/50:where(.dark,
    .dark *) {
        background-color: var(--dark-secondary)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .dark\:bg-\[var\(--dark-secondary\)\]\/50:where(.dark,
        .dark *) {
            background-color: color-mix(in oklab, var(--dark-secondary)50%, transparent)
        }
    }
    .dark\:bg-\[var\(--dark-secondary\)\]\/70:where(.dark,
    .dark *) {
        background-color: var(--dark-secondary)
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .dark\:bg-\[var\(--dark-secondary\)\]\/70:where(.dark,
        .dark *) {
            background-color: color-mix(in oklab, var(--dark-secondary)70%, transparent)
        }
    }
    .dark\:bg-gray-400\/20:where(.dark,
    .dark *) {
        background-color: #99a1af33
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .dark\:bg-gray-400\/20:where(.dark,
        .dark *) {
            background-color: color-mix(in oklab, var(--color-gray-400)20%, transparent)
        }
    }
    .dark\:bg-gray-600:where(.dark,
    .dark *) {
        background-color: var(--color-gray-600)
    }
    .dark\:bg-gray-600\/20:where(.dark,
    .dark *) {
        background-color: #4a556533
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .dark\:bg-gray-600\/20:where(.dark,
        .dark *) {
            background-color: color-mix(in oklab, var(--color-gray-600)20%, transparent)
        }
    }
    .dark\:bg-gray-700:where(.dark,
    .dark *) {
        background-color: var(--color-gray-700)
    }
    .dark\:bg-gray-700\/80:where(.dark,
    .dark *) {
        background-color: #364153cc
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .dark\:bg-gray-700\/80:where(.dark,
        .dark *) {
            background-color: color-mix(in oklab, var(--color-gray-700)80%, transparent)
        }
    }
    .dark\:bg-gray-800:where(.dark,
    .dark *) {
        background-color: var(--color-gray-800)
    }
    .dark\:bg-gray-800\/80:where(.dark,
    .dark *) {
        background-color: #1e2939cc
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .dark\:bg-gray-800\/80:where(.dark,
        .dark *) {
            background-color: color-mix(in oklab, var(--color-gray-800)80%, transparent)
        }
    }
    .dark\:bg-gray-900:where(.dark,
    .dark *) {
        background-color: var(--color-gray-900)
    }
    .dark\:bg-gray-950:where(.dark,
    .dark *) {
        background-color: var(--color-gray-950)
    }
    .dark\:bg-green-900\/50:where(.dark,
    .dark *) {
        background-color: #0d542b80
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .dark\:bg-green-900\/50:where(.dark,
        .dark *) {
            background-color: color-mix(in oklab, var(--color-green-900)50%, transparent)
        }
    }
    .dark\:bg-indigo-400\/10:where(.dark,
    .dark *) {
        background-color: #7d87ff1a
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .dark\:bg-indigo-400\/10:where(.dark,
        .dark *) {
            background-color: color-mix(in oklab, var(--color-indigo-400)10%, transparent)
        }
    }
    .dark\:bg-indigo-400\/15:where(.dark,
    .dark *) {
        background-color: #7d87ff26
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .dark\:bg-indigo-400\/15:where(.dark,
        .dark *) {
            background-color: color-mix(in oklab, var(--color-indigo-400)15%, transparent)
        }
    }
    .dark\:bg-purple-400\/10:where(.dark,
    .dark *) {
        background-color: #c07eff1a
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .dark\:bg-purple-400\/10:where(.dark,
        .dark *) {
            background-color: color-mix(in oklab, var(--color-purple-400)10%, transparent)
        }
    }
    .dark\:bg-purple-400\/15:where(.dark,
    .dark *) {
        background-color: #c07eff26
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .dark\:bg-purple-400\/15:where(.dark,
        .dark *) {
            background-color: color-mix(in oklab, var(--color-purple-400)15%, transparent)
        }
    }
    .dark\:bg-red-900\/30:where(.dark,
    .dark *) {
        background-color: #82181a4d
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .dark\:bg-red-900\/30:where(.dark,
        .dark *) {
            background-color: color-mix(in oklab, var(--color-red-900)30%, transparent)
        }
    }
    .dark\:bg-red-900\/50:where(.dark,
    .dark *) {
        background-color: #82181a80
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .dark\:bg-red-900\/50:where(.dark,
        .dark *) {
            background-color: color-mix(in oklab, var(--color-red-900)50%, transparent)
        }
    }
    .dark\:bg-white\/5:where(.dark,
    .dark *) {
        background-color: #ffffff0d
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .dark\:bg-white\/5:where(.dark,
        .dark *) {
            background-color: color-mix(in oklab, var(--color-white)5%, transparent)
        }
    }
    .dark\:from-\[var\(--dark-primary\)\]:where(.dark,
    .dark *) {
        --tw-gradient-from: var(--dark-primary);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    .dark\:from-gray-900:where(.dark,
    .dark *) {
        --tw-gradient-from: var(--color-gray-900);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    .dark\:from-indigo-500:where(.dark,
    .dark *) {
        --tw-gradient-from: var(--color-indigo-500);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    .dark\:to-\[var\(--dark-secondary\)\]:where(.dark,
    .dark *) {
        --tw-gradient-to: var(--dark-secondary);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    .dark\:to-gray-950:where(.dark,
    .dark *) {
        --tw-gradient-to: var(--color-gray-950);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    .dark\:to-purple-500:where(.dark,
    .dark *) {
        --tw-gradient-to: var(--color-purple-500);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from)var(--tw-gradient-from-position), var(--tw-gradient-to)var(--tw-gradient-to-position))
    }
    .dark\:fill-white:where(.dark,
    .dark *) {
        fill: var(--color-white)
    }
    .dark\:text-\[var\(--dark-base\)\]:where(.dark,
    .dark *) {
        color: var(--dark-base)
    }
    .dark\:text-\[var\(--dark-icon1\)\]:where(.dark,
    .dark *) {
        color: var(--dark-icon1)
    }
    .dark\:text-\[var\(--dark-icon2\)\]:where(.dark,
    .dark *) {
        color: var(--dark-icon2)
    }
    .dark\:text-\[var\(--dark-icon3\)\]:where(.dark,
    .dark *) {
        color: var(--dark-icon3)
    }
    .dark\:text-\[var\(--dark-inverted\)\]:where(.dark,
    .dark *) {
        color: var(--dark-inverted)
    }
    .dark\:text-\[var\(--dark-muted\)\]:where(.dark,
    .dark *) {
        color: var(--dark-muted)
    }
    .dark\:text-\[var\(--dark-primary\)\]:where(.dark,
    .dark *) {
        color: var(--dark-primary)
    }
    .dark\:text-base:where(.dark,
    .dark *) {
        color: hsl(var(--color-base))
    }
    .dark\:text-gray-100:where(.dark,
    .dark *) {
        color: var(--color-gray-100)
    }
    .dark\:text-gray-200:where(.dark,
    .dark *) {
        color: var(--color-gray-200)
    }
    .dark\:text-gray-300:where(.dark,
    .dark *) {
        color: var(--color-gray-300)
    }
    .dark\:text-gray-400:where(.dark,
    .dark *) {
        color: var(--color-gray-400)
    }
    .dark\:text-gray-500:where(.dark,
    .dark *) {
        color: var(--color-gray-500)
    }
    .dark\:text-green-200:where(.dark,
    .dark *) {
        color: var(--color-green-200)
    }
    .dark\:text-indigo-400:where(.dark,
    .dark *) {
        color: var(--color-indigo-400)
    }
    .dark\:text-red-200:where(.dark,
    .dark *) {
        color: var(--color-red-200)
    }
    .dark\:text-white:where(.dark,
    .dark *) {
        color: var(--color-white)
    }
    .dark\:opacity-15:where(.dark,
    .dark *) {
        opacity: .15
    }
    .dark\:opacity-60:where(.dark,
    .dark *) {
        opacity: .6
    }
    .dark\:mix-blend-soft-light:where(.dark,
    .dark *) {
        mix-blend-mode: soft-light
    }
    .dark\:ring-white\/10:where(.dark,
    .dark *) {
        --tw-ring-color: #ffffff1a
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .dark\:ring-white\/10:where(.dark,
        .dark *) {
            --tw-ring-color: color-mix(in oklab, var(--color-white)10%, transparent)
        }
    }
    .dark\:prose-invert:where(.dark,
    .dark *) {
        --tw-prose-body: var(--tw-prose-invert-body);
        --tw-prose-headings: var(--tw-prose-invert-headings);
        --tw-prose-lead: var(--tw-prose-invert-lead);
        --tw-prose-links: var(--tw-prose-invert-links);
        --tw-prose-bold: var(--tw-prose-invert-bold);
        --tw-prose-counters: var(--tw-prose-invert-counters);
        --tw-prose-bullets: var(--tw-prose-invert-bullets);
        --tw-prose-hr: var(--tw-prose-invert-hr);
        --tw-prose-quotes: var(--tw-prose-invert-quotes);
        --tw-prose-quote-borders: var(--tw-prose-invert-quote-borders);
        --tw-prose-captions: var(--tw-prose-invert-captions);
        --tw-prose-kbd: var(--tw-prose-invert-kbd);
        --tw-prose-kbd-shadows: var(--tw-prose-invert-kbd-shadows);
        --tw-prose-code: var(--tw-prose-invert-code);
        --tw-prose-pre-code: var(--tw-prose-invert-pre-code);
        --tw-prose-pre-bg: var(--tw-prose-invert-pre-bg);
        --tw-prose-th-borders: var(--tw-prose-invert-th-borders);
        --tw-prose-td-borders: var(--tw-prose-invert-td-borders)
    }
    @media (hover:hover) {
        .dark\:hover\:border-\[var\(--dark-primary\)\]\/50:where(.dark,
        .dark *):hover {
            border-color: var(--dark-primary)
        }
        @supports (color:color-mix(in lab,
        red,
        red)) {
            .dark\:hover\:border-\[var\(--dark-primary\)\]\/50:where(.dark,
            .dark *):hover {
                border-color: color-mix(in oklab, var(--dark-primary)50%, transparent)
            }
        }
        .dark\:hover\:border-\[var\(--dark-primary\)\]\/80:where(.dark,
        .dark *):hover {
            border-color: var(--dark-primary)
        }
        @supports (color:color-mix(in lab,
        red,
        red)) {
            .dark\:hover\:border-\[var\(--dark-primary\)\]\/80:where(.dark,
            .dark *):hover {
                border-color: color-mix(in oklab, var(--dark-primary)80%, transparent)
            }
        }
        .dark\:hover\:bg-\[var\(--dark-background-secondary\)\]\/90:where(.dark,
        .dark *):hover {
            background-color: var(--dark-background-secondary)
        }
        @supports (color:color-mix(in lab,
        red,
        red)) {
            .dark\:hover\:bg-\[var\(--dark-background-secondary\)\]\/90:where(.dark,
            .dark *):hover {
                background-color: color-mix(in oklab, var(--dark-background-secondary)90%, transparent)
            }
        }
        .dark\:hover\:bg-\[var\(--dark-background-secondary\)\]\/95:where(.dark,
        .dark *):hover {
            background-color: var(--dark-background-secondary)
        }
        @supports (color:color-mix(in lab,
        red,
        red)) {
            .dark\:hover\:bg-\[var\(--dark-background-secondary\)\]\/95:where(.dark,
            .dark *):hover {
                background-color: color-mix(in oklab, var(--dark-background-secondary)95%, transparent)
            }
        }
        .dark\:hover\:bg-\[var\(--dark-muted\)\]:where(.dark,
        .dark *):hover {
            background-color: var(--dark-muted)
        }
        .dark\:hover\:bg-\[var\(--dark-neutral\)\]:where(.dark,
        .dark *):hover {
            background-color: var(--dark-neutral)
        }
        .dark\:hover\:bg-gray-700\/80:where(.dark,
        .dark *):hover {
            background-color: #364153cc
        }
        @supports (color:color-mix(in lab,
        red,
        red)) {
            .dark\:hover\:bg-gray-700\/80:where(.dark,
            .dark *):hover {
                background-color: color-mix(in oklab, var(--color-gray-700)80%, transparent)
            }
        }
        .dark\:hover\:bg-white\/5:where(.dark,
        .dark *):hover {
            background-color: #ffffff0d
        }
        @supports (color:color-mix(in lab,
        red,
        red)) {
            .dark\:hover\:bg-white\/5:where(.dark,
            .dark *):hover {
                background-color: color-mix(in oklab, var(--color-white)5%, transparent)
            }
        }
        .dark\:hover\:text-\[var\(--dark-primary\)\]:where(.dark,
        .dark *):hover,
        .dark\:hover\:text-\[var\(--dark-primary\)\]\/80:where(.dark,
        .dark *):hover {
            color: var(--dark-primary)
        }
        @supports (color:color-mix(in lab,
        red,
        red)) {
            .dark\:hover\:text-\[var\(--dark-primary\)\]\/80:where(.dark,
            .dark *):hover {
                color: color-mix(in oklab, var(--dark-primary)80%, transparent)
            }
        }
        .dark\:hover\:text-gray-300:where(.dark,
        .dark *):hover {
            color: var(--color-gray-300)
        }
        .dark\:hover\:text-indigo-300:where(.dark,
        .dark *):hover {
            color: var(--color-indigo-300)
        }
        .dark\:hover\:shadow-\[var\(--dark-primary\)\]\/20:where(.dark,
        .dark *):hover {
            --tw-shadow-alpha: 20%;
            --tw-shadow: var(--dark-primary);
            box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
        }
        .dark\:hover\:shadow-indigo-500\/20:where(.dark,
        .dark *):hover {
            --tw-shadow-color: #625fff33
        }
        @supports (color:color-mix(in lab,
        red,
        red)) {
            .dark\:hover\:shadow-indigo-500\/20:where(.dark,
            .dark *):hover {
                --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-indigo-500)20%, transparent)var(--tw-shadow-alpha), transparent)
            }
        }
    }
    .dark\:focus-visible\:bg-white\/5:where(.dark,
    .dark *):focus-visible {
        background-color: #ffffff0d
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .dark\:focus-visible\:bg-white\/5:where(.dark,
        .dark *):focus-visible {
            background-color: color-mix(in oklab, var(--color-white)5%, transparent)
        }
    }
    .\[\&\:\:-moz-range-thumb\]\:h-5::-moz-range-thumb {
        height: calc(var(--spacing)*5)
    }
    .\[\&\:\:-moz-range-thumb\]\:w-5::-moz-range-thumb {
        width: calc(var(--spacing)*5)
    }
    .\[\&\:\:-moz-range-thumb\]\:rounded-full::-moz-range-thumb {
        border-radius: 3.40282e38px
    }
    .\[\&\:\:-moz-range-thumb\]\:border-none::-moz-range-thumb {
        --tw-border-style: none;
        border-style: none
    }
    .\[\&\:\:-moz-range-thumb\]\:bg-base::-moz-range-thumb {
        background-color: hsl(var(--color-base))
    }
    .\[\&\:\:-moz-range-thumb\]\:shadow-none::-moz-range-thumb {
        --tw-shadow: 0 0 #0000;
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
    }
    .\[\&\:\:-moz-range-thumb\]\:focus\:ring-0::-moz-range-thumb:focus {
        --tw-ring-shadow: var(--tw-ring-inset, )0 0 0 calc(0px + var(--tw-ring-offset-width))var(--tw-ring-color, currentcolor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
    }
    .\[\&\:\:-webkit-slider-thumb\]\:h-5::-webkit-slider-thumb {
        height: calc(var(--spacing)*5)
    }
    .\[\&\:\:-webkit-slider-thumb\]\:w-5::-webkit-slider-thumb {
        width: calc(var(--spacing)*5)
    }
    .\[\&\:\:-webkit-slider-thumb\]\:appearance-none::-webkit-slider-thumb {
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none
    }
    .\[\&\:\:-webkit-slider-thumb\]\:rounded-full::-webkit-slider-thumb {
        border-radius: 3.40282e38px
    }
    .\[\&\:\:-webkit-slider-thumb\]\:bg-white::-webkit-slider-thumb {
        background-color: var(--color-white)
    }
    .\[\&\:\:-webkit-slider-thumb\]\:shadow-none::-webkit-slider-thumb {
        --tw-shadow: 0 0 #0000;
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
    }
    .\[\&\:\:-webkit-slider-thumb\]\:focus\:ring-0::-webkit-slider-thumb:focus {
        --tw-ring-shadow: var(--tw-ring-inset, )0 0 0 calc(0px + var(--tw-ring-offset-width))var(--tw-ring-color, currentcolor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow)
    }
    .\[\&\[x-cloak\]\]\:hidden[x-cloak] {
        display: none
    }
}

.EasyMDEContainer .editor-statusbar {
    display: none
}

.EasyMDEContainer .editor-toolbar .separator {
    border-style: none;
    width: .25rem;
    margin: 0 !important
}

.EasyMDEContainer .cm-s-easymde .cm-formatting-code+.cm-comment:not(.cm-formatting-code) {
    background-color: hsl(var(--color-background-secondary)/var(--tw-text-opacity));
    color: hsl(var(--color-base)/var(--tw-text-opacity))
}

.EasyMDEContainer .cm-s-easymde .cm-comment {
    background-image: none
}

.EasyMDEContainer .cm-s-easymde .cm-formatting-code-block,
.EasyMDEContainer .cm-s-easymde .cm-tab+.cm-comment {
    border-style: var(--tw-border-style);
    border-width: 0;
    border-color: hsl(var(--color-neutral));
    background-color: hsl(var(--color-background-secondary));
    color: inherit
}

.EasyMDEContainer .CodeMirror {
    background-color: hsl(var(--color-background-secondary));
    padding-inline: calc(var(--spacing)*3);
    padding-block: calc(var(--spacing)*1.5);
    color: inherit;
    border-bottom-right-radius: var(--radius-lg) !important;
    border-bottom-left-radius: var(--radius-lg) !important;
    border-style: var(--tw-border-style) !important;
    border-width: 0 !important
}

.EasyMDEContainer .CodeMirror-scroll {
    height: auto
}

.EasyMDEContainer .editor-toolbar {
    column-gap: calc(var(--spacing)*1);
    border-radius: 0;
    border-top-left-radius: var(--radius-lg);
    border-top-right-radius: var(--radius-lg);
    border-style: var(--tw-border-style);
    border-width: 0;
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
    border-color: hsl(var(--color-neutral));
    background-color: hsl(var(--color-background-secondary));
    padding-inline: calc(var(--spacing)*2.5);
    padding-block: calc(var(--spacing)*2);
    display: flex;
    overflow-x: auto
}

.EasyMDEContainer .editor-toolbar button {
    width: calc(var(--spacing)*8);
    height: calc(var(--spacing)*8);
    cursor: pointer;
    border-radius: var(--radius-lg);
    --tw-border-style: none;
    padding: calc(var(--spacing)*0);
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 75ms;
    border-style: none;
    place-content: center;
    transition-duration: 75ms;
    display: grid
}

@media (hover:hover) {
    .EasyMDEContainer .editor-toolbar button:hover {
        background-color: #ffffff0d
    }
    @supports (color:color-mix(in lab,
    red,
    red)) {
        .EasyMDEContainer .editor-toolbar button:hover {
            background-color: color-mix(in oklab, var(--color-white)5%, transparent)
        }
    }
}

.EasyMDEContainer .editor-toolbar button:focus-visible {
    background-color: var(--color-gray-50)
}

.EasyMDEContainer .editor-toolbar button:where(.dark,
.dark *):focus-visible {
    background-color: #ffffff0d
}

@supports (color:color-mix(in lab,
red,
red)) {
    .EasyMDEContainer .editor-toolbar button:where(.dark,
    .dark *):focus-visible {
        background-color: color-mix(in oklab, var(--color-white)5%, transparent)
    }
}

.EasyMDEContainer .editor-toolbar button.active {
    background-color: hsl(var(--color-neutral))
}

.EasyMDEContainer .editor-toolbar button:before {
    width: calc(var(--spacing)*4);
    height: calc(var(--spacing)*4);
    background-color: hsl(var(--color-background-secondary));
    content: "";
    background-color: hsl(var(--color-base));
    width: 1rem;
    height: 1rem;
    display: block;
    -webkit-mask-position: 50%;
    mask-position: 50%;
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat
}

.EasyMDEContainer .editor-toolbar .bold:before {
    -webkit-mask-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 384 512'%3E%3Cpath d='M321.1 242.4c19-22.3 30.9-50.8 30.9-82.4 0-70.59-57.42-128-128-128l-192 .01c-17.67 0-32 14.31-32 32s14.33 32 32 32h16v320H32c-17.67 0-32 14.31-32 32s14.33 32 32 32h224c70.58 0 128-57.41 128-128 0-46.71-25.4-87.21-62.9-109.61zM112 96.01h112c35.3 0 64 28.72 64 64s-28.7 64-64 64H112v-128zM256 416H112V288h144c35.3 0 64 28.71 64 63.1S291.3 416 256 416z'/%3E%3C/svg%3E");
    mask-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 384 512'%3E%3Cpath d='M321.1 242.4c19-22.3 30.9-50.8 30.9-82.4 0-70.59-57.42-128-128-128l-192 .01c-17.67 0-32 14.31-32 32s14.33 32 32 32h16v320H32c-17.67 0-32 14.31-32 32s14.33 32 32 32h224c70.58 0 128-57.41 128-128 0-46.71-25.4-87.21-62.9-109.61zM112 96.01h112c35.3 0 64 28.72 64 64s-28.7 64-64 64H112v-128zM256 416H112V288h144c35.3 0 64 28.71 64 63.1S291.3 416 256 416z'/%3E%3C/svg%3E")
}

.EasyMDEContainer .editor-toolbar .italic:before {
    -webkit-mask-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 384 512'%3E%3Cpath d='M384 64.01c0 17.69-14.31 32-32 32h-58.67l-133.3 320H224c17.69 0 32 14.31 32 32s-14.31 32-32 32H32c-17.69 0-32-14.31-32-32s14.31-32 32-32h58.67l133.3-320H160c-17.69 0-32-14.31-32-32s14.31-32 32-32h192c17.7 0 32 14.32 32 32z'/%3E%3C/svg%3E");
    mask-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 384 512'%3E%3Cpath d='M384 64.01c0 17.69-14.31 32-32 32h-58.67l-133.3 320H224c17.69 0 32 14.31 32 32s-14.31 32-32 32H32c-17.69 0-32-14.31-32-32s14.31-32 32-32h58.67l133.3-320H160c-17.69 0-32-14.31-32-32s14.31-32 32-32h192c17.7 0 32 14.32 32 32z'/%3E%3C/svg%3E")
}

.EasyMDEContainer .editor-toolbar .strikethrough:before {
    -webkit-mask-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'%3E%3Cpath d='M332.2 319.9c17.22 12.17 22.33 26.51 18.61 48.21-3.031 17.59-10.88 29.34-24.72 36.99-35.44 19.75-108.5 11.96-186-19.68-16.34-6.686-35.03 1.156-41.72 17.53s1.188 35.05 17.53 41.71c31.75 12.93 95.69 35.37 157.6 35.37 29.62 0 58.81-5.156 83.72-18.96 30.81-17.09 50.44-45.46 56.72-82.11 3.998-23.27 2.168-42.58-3.488-59.05H332.2zm155.8-80-176.5-.03c-15.85-5.614-31.83-10.34-46.7-14.62-85.47-24.62-110.9-39.05-103.7-81.33 2.5-14.53 10.16-25.96 22.72-34.03 20.47-13.15 64.06-23.84 155.4.343 17.09 4.53 34.59-5.654 39.13-22.74 4.531-17.09-5.656-34.59-22.75-39.12-91.31-24.18-160.7-21.62-206.3 7.654C121.8 73.72 103.6 101.1 98.09 133.1c-8.83 51.4 9.81 84.2 39.11 106.8H24c-13.25 0-24 10.75-24 23.1 0 13.25 10.75 23.1 24 23.1h464c13.25 0 24-10.75 24-23.1 0-12.3-10.7-23.1-24-23.1z'/%3E%3C/svg%3E");
    mask-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'%3E%3Cpath d='M332.2 319.9c17.22 12.17 22.33 26.51 18.61 48.21-3.031 17.59-10.88 29.34-24.72 36.99-35.44 19.75-108.5 11.96-186-19.68-16.34-6.686-35.03 1.156-41.72 17.53s1.188 35.05 17.53 41.71c31.75 12.93 95.69 35.37 157.6 35.37 29.62 0 58.81-5.156 83.72-18.96 30.81-17.09 50.44-45.46 56.72-82.11 3.998-23.27 2.168-42.58-3.488-59.05H332.2zm155.8-80-176.5-.03c-15.85-5.614-31.83-10.34-46.7-14.62-85.47-24.62-110.9-39.05-103.7-81.33 2.5-14.53 10.16-25.96 22.72-34.03 20.47-13.15 64.06-23.84 155.4.343 17.09 4.53 34.59-5.654 39.13-22.74 4.531-17.09-5.656-34.59-22.75-39.12-91.31-24.18-160.7-21.62-206.3 7.654C121.8 73.72 103.6 101.1 98.09 133.1c-8.83 51.4 9.81 84.2 39.11 106.8H24c-13.25 0-24 10.75-24 23.1 0 13.25 10.75 23.1 24 23.1h464c13.25 0 24-10.75 24-23.1 0-12.3-10.7-23.1-24-23.1z'/%3E%3C/svg%3E")
}

.EasyMDEContainer .editor-toolbar .link:before {
    -webkit-mask-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 640 512'%3E%3Cpath d='M598.6 41.41C570.1 13.8 534.8 0 498.6 0s-72.36 13.8-99.96 41.41l-43.36 43.36c15.11 8.012 29.47 17.58 41.91 30.02 3.146 3.146 5.898 6.518 8.742 9.838l37.96-37.96C458.5 72.05 477.1 64 498.6 64c20.67 0 40.1 8.047 54.71 22.66 14.61 14.61 22.66 34.04 22.66 54.71s-8.049 40.1-22.66 54.71l-133.3 133.3C405.5 343.1 386 352 365.4 352s-40.1-8.048-54.71-22.66C296 314.7 287.1 295.3 287.1 274.6s8.047-40.1 22.66-54.71l4.44-3.49c-2.1-3.9-4.3-7.9-7.5-11.1-8.6-8.6-19.9-13.3-32.1-13.3-11.93 0-23.1 4.664-31.61 12.97-30.71 53.96-23.63 123.6 22.39 169.6C293 402.2 329.2 416 365.4 416c36.18 0 72.36-13.8 99.96-41.41L598.6 241.3c28.45-28.45 42.24-66.01 41.37-103.3-.87-35.9-14.57-69.84-41.37-96.59zM234 387.4l-37.9 37.9C181.5 439.1 162 448 141.4 448c-20.67 0-40.1-8.047-54.71-22.66-14.61-14.61-22.66-34.04-22.66-54.71s8.049-40.1 22.66-54.71l133.3-133.3C234.5 168 253.1 160 274.6 160s40.1 8.048 54.71 22.66c14.62 14.61 22.66 34.04 22.66 54.71s-8.047 40.1-22.66 54.71l-3.51 3.52c2.094 3.939 4.219 7.895 7.465 11.15C341.9 315.3 353.3 320 365.4 320c11.93 0 23.1-4.664 31.61-12.97 30.71-53.96 23.63-123.6-22.39-169.6C346.1 109.8 310.8 96 274.6 96c-36.2 0-72.3 13.8-99.9 41.4L41.41 270.7C13.81 298.3 0 334.48 0 370.66c0 36.18 13.8 72.36 41.41 99.97C69.01 498.2 105.2 512 141.4 512c36.18 0 72.36-13.8 99.96-41.41l43.36-43.36c-15.11-8.012-29.47-17.58-41.91-30.02-3.21-3.11-5.91-6.51-8.81-9.81z'/%3E%3C/svg%3E");
    mask-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 640 512'%3E%3Cpath d='M598.6 41.41C570.1 13.8 534.8 0 498.6 0s-72.36 13.8-99.96 41.41l-43.36 43.36c15.11 8.012 29.47 17.58 41.91 30.02 3.146 3.146 5.898 6.518 8.742 9.838l37.96-37.96C458.5 72.05 477.1 64 498.6 64c20.67 0 40.1 8.047 54.71 22.66 14.61 14.61 22.66 34.04 22.66 54.71s-8.049 40.1-22.66 54.71l-133.3 133.3C405.5 343.1 386 352 365.4 352s-40.1-8.048-54.71-22.66C296 314.7 287.1 295.3 287.1 274.6s8.047-40.1 22.66-54.71l4.44-3.49c-2.1-3.9-4.3-7.9-7.5-11.1-8.6-8.6-19.9-13.3-32.1-13.3-11.93 0-23.1 4.664-31.61 12.97-30.71 53.96-23.63 123.6 22.39 169.6C293 402.2 329.2 416 365.4 416c36.18 0 72.36-13.8 99.96-41.41L598.6 241.3c28.45-28.45 42.24-66.01 41.37-103.3-.87-35.9-14.57-69.84-41.37-96.59zM234 387.4l-37.9 37.9C181.5 439.1 162 448 141.4 448c-20.67 0-40.1-8.047-54.71-22.66-14.61-14.61-22.66-34.04-22.66-54.71s8.049-40.1 22.66-54.71l133.3-133.3C234.5 168 253.1 160 274.6 160s40.1 8.048 54.71 22.66c14.62 14.61 22.66 34.04 22.66 54.71s-8.047 40.1-22.66 54.71l-3.51 3.52c2.094 3.939 4.219 7.895 7.465 11.15C341.9 315.3 353.3 320 365.4 320c11.93 0 23.1-4.664 31.61-12.97 30.71-53.96 23.63-123.6-22.39-169.6C346.1 109.8 310.8 96 274.6 96c-36.2 0-72.3 13.8-99.9 41.4L41.41 270.7C13.81 298.3 0 334.48 0 370.66c0 36.18 13.8 72.36 41.41 99.97C69.01 498.2 105.2 512 141.4 512c36.18 0 72.36-13.8 99.96-41.41l43.36-43.36c-15.11-8.012-29.47-17.58-41.91-30.02-3.21-3.11-5.91-6.51-8.81-9.81z'/%3E%3C/svg%3E")
}

.EasyMDEContainer .editor-toolbar .heading:before {
    -webkit-mask-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 448 512'%3E%3Cpath d='M0 64c0-17.7 14.3-32 32-32h96c17.7 0 32 14.3 32 32s-14.3 32-32 32h-16v112h224V96h-16c-17.7 0-32-14.3-32-32s14.3-32 32-32h96c17.7 0 32 14.3 32 32s-14.3 32-32 32h-16v320h16c17.7 0 32 14.3 32 32s-14.3 32-32 32h-96c-17.7 0-32-14.3-32-32s14.3-32 32-32h16V272H112v144h16c17.7 0 32 14.3 32 32s-14.3 32-32 32H32c-17.7 0-32-14.3-32-32s14.3-32 32-32h16V96H32C14.3 96 0 81.7 0 64z'/%3E%3C/svg%3E");
    mask-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 448 512'%3E%3Cpath d='M0 64c0-17.7 14.3-32 32-32h96c17.7 0 32 14.3 32 32s-14.3 32-32 32h-16v112h224V96h-16c-17.7 0-32-14.3-32-32s14.3-32 32-32h96c17.7 0 32 14.3 32 32s-14.3 32-32 32h-16v320h16c17.7 0 32 14.3 32 32s-14.3 32-32 32h-96c-17.7 0-32-14.3-32-32s14.3-32 32-32h16V272H112v144h16c17.7 0 32 14.3 32 32s-14.3 32-32 32H32c-17.7 0-32-14.3-32-32s14.3-32 32-32h16V96H32C14.3 96 0 81.7 0 64z'/%3E%3C/svg%3E")
}

.EasyMDEContainer .editor-toolbar .quote:before {
    -webkit-mask-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 448 512'%3E%3Cpath d='M96 224c-11.28 0-21.95 2.3-32 5.9V224c0-35.3 28.7-64 64-64 17.67 0 32-14.33 32-32s-14.3-32-32-32C57.42 96 0 153.4 0 224v96c0 53.02 42.98 96 96 96s96-42.98 96-96-43-96-96-96zm256 0c-11.28 0-21.95 2.305-32 5.879V224c0-35.3 28.7-64 64-64 17.67 0 32-14.33 32-32s-14.33-32-32-32c-70.58 0-128 57.42-128 128v96c0 53.02 42.98 96 96 96s96-42.98 96-96-43-96-96-96z'/%3E%3C/svg%3E");
    mask-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 448 512'%3E%3Cpath d='M96 224c-11.28 0-21.95 2.3-32 5.9V224c0-35.3 28.7-64 64-64 17.67 0 32-14.33 32-32s-14.3-32-32-32C57.42 96 0 153.4 0 224v96c0 53.02 42.98 96 96 96s96-42.98 96-96-43-96-96-96zm256 0c-11.28 0-21.95 2.305-32 5.879V224c0-35.3 28.7-64 64-64 17.67 0 32-14.33 32-32s-14.33-32-32-32c-70.58 0-128 57.42-128 128v96c0 53.02 42.98 96 96 96s96-42.98 96-96-43-96-96-96z'/%3E%3C/svg%3E")
}

.EasyMDEContainer .editor-toolbar .code:before {
    -webkit-mask-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 640 512'%3E%3Cpath d='M416 31.94C416 21.75 408.1 0 384.1 0c-13.98 0-26.87 9.072-30.89 23.18l-128 448a31.933 31.933 0 0 0-1.241 8.801C223.1 490.3 232 512 256 512c13.92 0 26.73-9.157 30.75-23.22l128-448c.85-2.97 1.25-5.93 1.25-8.84zM176 143.1c0-18.28-14.95-32-32-32-8.188 0-16.38 3.125-22.62 9.376l-112 112C3.125 239.6 0 247.8 0 255.1s3.125 17.3 9.375 23.5l112 112c6.225 6.3 14.425 8.5 22.625 8.5 17.05 0 32-13.73 32-32 0-8.188-3.125-16.38-9.375-22.63L77.25 255.1l89.38-89.38c6.27-5.42 9.37-13.52 9.37-22.62zm464 112c0-8.188-3.125-16.38-9.375-22.63l-112-112C512.4 115.1 504.2 111.1 496 111.1c-17.05 0-32 13.73-32 32 0 8.188 3.125 16.38 9.375 22.63l89.38 89.38-89.38 89.38C467.1 351.6 464 359.8 464 367.1c0 18.28 14.95 32 32 32 8.188 0 16.38-3.125 22.62-9.376l112-112C636.9 272.4 640 264.2 640 255.1z'/%3E%3C/svg%3E");
    mask-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 640 512'%3E%3Cpath d='M416 31.94C416 21.75 408.1 0 384.1 0c-13.98 0-26.87 9.072-30.89 23.18l-128 448a31.933 31.933 0 0 0-1.241 8.801C223.1 490.3 232 512 256 512c13.92 0 26.73-9.157 30.75-23.22l128-448c.85-2.97 1.25-5.93 1.25-8.84zM176 143.1c0-18.28-14.95-32-32-32-8.188 0-16.38 3.125-22.62 9.376l-112 112C3.125 239.6 0 247.8 0 255.1s3.125 17.3 9.375 23.5l112 112c6.225 6.3 14.425 8.5 22.625 8.5 17.05 0 32-13.73 32-32 0-8.188-3.125-16.38-9.375-22.63L77.25 255.1l89.38-89.38c6.27-5.42 9.37-13.52 9.37-22.62zm464 112c0-8.188-3.125-16.38-9.375-22.63l-112-112C512.4 115.1 504.2 111.1 496 111.1c-17.05 0-32 13.73-32 32 0 8.188 3.125 16.38 9.375 22.63l89.38 89.38-89.38 89.38C467.1 351.6 464 359.8 464 367.1c0 18.28 14.95 32 32 32 8.188 0 16.38-3.125 22.62-9.376l112-112C636.9 272.4 640 264.2 640 255.1z'/%3E%3C/svg%3E")
}

.EasyMDEContainer .editor-toolbar .unordered-list:before {
    -webkit-mask-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'%3E%3Cpath d='M16 96c0-26.51 21.49-48 48-48s48 21.49 48 48c0 26.5-21.49 48-48 48s-48-21.5-48-48zm464-32c17.7 0 32 14.33 32 32 0 17.7-14.3 32-32 32H192c-17.7 0-32-14.3-32-32 0-17.67 14.3-32 32-32h288zm0 160c17.7 0 32 14.3 32 32s-14.3 32-32 32H192c-17.7 0-32-14.3-32-32s14.3-32 32-32h288zm0 160c17.7 0 32 14.3 32 32s-14.3 32-32 32H192c-17.7 0-32-14.3-32-32s14.3-32 32-32h288zM16 416c0-26.5 21.49-48 48-48s48 21.5 48 48-21.49 48-48 48-48-21.5-48-48zm96-160c0 26.5-21.49 48-48 48s-48-21.5-48-48 21.49-48 48-48 48 21.5 48 48z'/%3E%3C/svg%3E");
    mask-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'%3E%3Cpath d='M16 96c0-26.51 21.49-48 48-48s48 21.49 48 48c0 26.5-21.49 48-48 48s-48-21.5-48-48zm464-32c17.7 0 32 14.33 32 32 0 17.7-14.3 32-32 32H192c-17.7 0-32-14.3-32-32 0-17.67 14.3-32 32-32h288zm0 160c17.7 0 32 14.3 32 32s-14.3 32-32 32H192c-17.7 0-32-14.3-32-32s14.3-32 32-32h288zm0 160c17.7 0 32 14.3 32 32s-14.3 32-32 32H192c-17.7 0-32-14.3-32-32s14.3-32 32-32h288zM16 416c0-26.5 21.49-48 48-48s48 21.5 48 48-21.49 48-48 48-48-21.5-48-48zm96-160c0 26.5-21.49 48-48 48s-48-21.5-48-48 21.49-48 48-48 48 21.5 48 48z'/%3E%3C/svg%3E")
}

.EasyMDEContainer .editor-toolbar .ordered-list:before {
    -webkit-mask-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'%3E%3Cpath d='M55.1 56.04c0-13.26 11.64-24 24-24h32c14.2 0 24 10.74 24 24V176h16c14.2 0 24 10.8 24 24 0 13.3-9.8 24-24 24h-80c-12.36 0-24-10.7-24-24 0-13.2 11.64-24 24-24h16V80.04h-8c-12.36 0-24-10.75-24-24zm63.6 285.16c-6.6-7.4-18.3-6.9-24.05 1.2l-11.12 15.5c-7.7 10.8-22.69 13.3-33.48 5.6-10.79-7.7-13.28-22.7-5.58-33.4l11.12-15.6c23.74-33.3 72.31-35.7 99.21-4.9 21.3 23.5 20.8 60.9-1.1 84.7L118.8 432H152c13.3 0 24 10.7 24 24s-10.7 24-24 24H64c-9.53 0-18.16-5.6-21.98-14.4-3.83-8.7-2.12-18.9 4.34-25.9l72.04-78c5.3-5.8 5.4-14.6.3-20.5zM512 64c17.7 0 32 14.33 32 32 0 17.7-14.3 32-32 32H256c-17.7 0-32-14.3-32-32 0-17.67 14.3-32 32-32h256zm0 160c17.7 0 32 14.3 32 32s-14.3 32-32 32H256c-17.7 0-32-14.3-32-32s14.3-32 32-32h256zm0 160c17.7 0 32 14.3 32 32s-14.3 32-32 32H256c-17.7 0-32-14.3-32-32s14.3-32 32-32h256z'/%3E%3C/svg%3E");
    mask-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'%3E%3Cpath d='M55.1 56.04c0-13.26 11.64-24 24-24h32c14.2 0 24 10.74 24 24V176h16c14.2 0 24 10.8 24 24 0 13.3-9.8 24-24 24h-80c-12.36 0-24-10.7-24-24 0-13.2 11.64-24 24-24h16V80.04h-8c-12.36 0-24-10.75-24-24zm63.6 285.16c-6.6-7.4-18.3-6.9-24.05 1.2l-11.12 15.5c-7.7 10.8-22.69 13.3-33.48 5.6-10.79-7.7-13.28-22.7-5.58-33.4l11.12-15.6c23.74-33.3 72.31-35.7 99.21-4.9 21.3 23.5 20.8 60.9-1.1 84.7L118.8 432H152c13.3 0 24 10.7 24 24s-10.7 24-24 24H64c-9.53 0-18.16-5.6-21.98-14.4-3.83-8.7-2.12-18.9 4.34-25.9l72.04-78c5.3-5.8 5.4-14.6.3-20.5zM512 64c17.7 0 32 14.33 32 32 0 17.7-14.3 32-32 32H256c-17.7 0-32-14.3-32-32 0-17.67 14.3-32 32-32h256zm0 160c17.7 0 32 14.3 32 32s-14.3 32-32 32H256c-17.7 0-32-14.3-32-32s14.3-32 32-32h256zm0 160c17.7 0 32 14.3 32 32s-14.3 32-32 32H256c-17.7 0-32-14.3-32-32s14.3-32 32-32h256z'/%3E%3C/svg%3E")
}

.EasyMDEContainer .editor-toolbar .table:before {
    -webkit-mask-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1792 1792'%3E%3Cpath d='M576 1376v-192q0-14-9-23t-23-9H224q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm0-384V800q0-14-9-23t-23-9H224q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm512 384v-192q0-14-9-23t-23-9H736q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zM576 608V416q0-14-9-23t-23-9H224q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm512 384V800q0-14-9-23t-23-9H736q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm512 384v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm-512-768V416q0-14-9-23t-23-9H736q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm512 384V800q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm0-384V416q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm128-320v1088q0 66-47 113t-113 47H224q-66 0-113-47t-47-113V288q0-66 47-113t113-47h1344q66 0 113 47t47 113z'/%3E%3C/svg%3E");
    mask-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1792 1792'%3E%3Cpath d='M576 1376v-192q0-14-9-23t-23-9H224q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm0-384V800q0-14-9-23t-23-9H224q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm512 384v-192q0-14-9-23t-23-9H736q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zM576 608V416q0-14-9-23t-23-9H224q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm512 384V800q0-14-9-23t-23-9H736q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm512 384v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm-512-768V416q0-14-9-23t-23-9H736q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm512 384V800q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm0-384V416q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm128-320v1088q0 66-47 113t-113 47H224q-66 0-113-47t-47-113V288q0-66 47-113t113-47h1344q66 0 113 47t47 113z'/%3E%3C/svg%3E")
}

.EasyMDEContainer .editor-toolbar .upload-image:before {
    -webkit-mask-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'%3E%3Cpath d='M447.1 32h-484C28.64 32-.01 60.65-.01 96v320c0 35.35 28.65 64 63.1 64h384c35.35 0 64-28.65 64-64V96c.01-35.35-27.79-64-63.99-64zm-336 64c26.51 0 48 21.49 48 48s-20.6 48-48 48-48-21.49-48-48 22.38-48 48-48zm335 311.6c-2.8 5.2-8.2 8.4-14.1 8.4H82.01a15.993 15.993 0 0 1-14.26-8.75 16 16 0 0 1 1.334-16.68l70-96C142.1 290.4 146.9 288 152 288s9.916 2.441 12.93 6.574l32.46 44.51 93.3-139.1C293.7 194.7 298.7 192 304 192s10.35 2.672 13.31 7.125l128 192c3.29 4.875 3.59 11.175.79 16.475z'/%3E%3C/svg%3E");
    mask-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'%3E%3Cpath d='M447.1 32h-484C28.64 32-.01 60.65-.01 96v320c0 35.35 28.65 64 63.1 64h384c35.35 0 64-28.65 64-64V96c.01-35.35-27.79-64-63.99-64zm-336 64c26.51 0 48 21.49 48 48s-20.6 48-48 48-48-21.49-48-48 22.38-48 48-48zm335 311.6c-2.8 5.2-8.2 8.4-14.1 8.4H82.01a15.993 15.993 0 0 1-14.26-8.75 16 16 0 0 1 1.334-16.68l70-96C142.1 290.4 146.9 288 152 288s9.916 2.441 12.93 6.574l32.46 44.51 93.3-139.1C293.7 194.7 298.7 192 304 192s10.35 2.672 13.31 7.125l128 192c3.29 4.875 3.59 11.175.79 16.475z'/%3E%3C/svg%3E")
}

.EasyMDEContainer .editor-toolbar .undo:before {
    -webkit-mask-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'%3E%3Cpath d='M480 256c0 123.4-100.5 223.9-223.9 223.9-48.84 0-95.17-15.58-134.2-44.86-14.12-10.59-16.97-30.66-6.375-44.81 10.59-14.12 30.62-16.94 44.81-6.375 27.84 20.91 61 31.94 95.88 31.94C344.3 415.8 416 344.1 416 256S344.31 96.2 256.2 96.2c-37.46 0-73.09 13.49-101.3 36.64l45.12 45.14c17.01 17.02 4.955 46.1-19.1 46.1H35.17C24.58 224.1 16 215.5 16 204.9V59.04C16 35 45.07 22.96 62.07 39.97l47.6 47.63C149.9 52.71 201.5 32.11 256.1 32.11 379.5 32.11 480 132.6 480 256z'/%3E%3C/svg%3E");
    mask-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'%3E%3Cpath d='M480 256c0 123.4-100.5 223.9-223.9 223.9-48.84 0-95.17-15.58-134.2-44.86-14.12-10.59-16.97-30.66-6.375-44.81 10.59-14.12 30.62-16.94 44.81-6.375 27.84 20.91 61 31.94 95.88 31.94C344.3 415.8 416 344.1 416 256S344.31 96.2 256.2 96.2c-37.46 0-73.09 13.49-101.3 36.64l45.12 45.14c17.01 17.02 4.955 46.1-19.1 46.1H35.17C24.58 224.1 16 215.5 16 204.9V59.04C16 35 45.07 22.96 62.07 39.97l47.6 47.63C149.9 52.71 201.5 32.11 256.1 32.11 379.5 32.11 480 132.6 480 256z'/%3E%3C/svg%3E")
}

.EasyMDEContainer .editor-toolbar .redo:before {
    -webkit-mask-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'%3E%3Cpath d='M468.9 32.11c13.87 0 27.18 10.77 27.18 27.04v145.9c0 10.59-8.584 19.17-19.17 19.17h-145.7c-16.28 0-27.06-13.32-27.06-27.2 0-6.634 2.461-13.4 7.96-18.9l45.12-45.14c-28.22-23.14-63.85-36.64-101.3-36.64-88.09 0-159.8 71.69-159.8 159.8S167.8 415.9 255.9 415.9c73.14 0 89.44-38.31 115.1-38.31 18.48 0 31.97 15.04 31.97 31.96 0 35.04-81.59 70.41-147 70.41-123.4 0-223.9-100.5-223.9-223.9S132.6 32.44 256 32.44c54.6 0 106.2 20.39 146.4 55.26L450 40.07c5.5-5.5 12.3-7.96 18.9-7.96z'/%3E%3C/svg%3E");
    mask-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'%3E%3Cpath d='M468.9 32.11c13.87 0 27.18 10.77 27.18 27.04v145.9c0 10.59-8.584 19.17-19.17 19.17h-145.7c-16.28 0-27.06-13.32-27.06-27.2 0-6.634 2.461-13.4 7.96-18.9l45.12-45.14c-28.22-23.14-63.85-36.64-101.3-36.64-88.09 0-159.8 71.69-159.8 159.8S167.8 415.9 255.9 415.9c73.14 0 89.44-38.31 115.1-38.31 18.48 0 31.97 15.04 31.97 31.96 0 35.04-81.59 70.41-147 70.41-123.4 0-223.9-100.5-223.9-223.9S132.6 32.44 256 32.44c54.6 0 106.2 20.39 146.4 55.26L450 40.07c5.5-5.5 12.3-7.96 18.9-7.96z'/%3E%3C/svg%3E")
}

@property --tw-translate-x {
    syntax: "*";
    inherits: false;
    initial-value: 0
}

@property --tw-translate-y {
    syntax: "*";
    inherits: false;
    initial-value: 0
}

@property --tw-translate-z {
    syntax: "*";
    inherits: false;
    initial-value: 0
}

@property --tw-scale-x {
    syntax: "*";
    inherits: false;
    initial-value: 1
}

@property --tw-scale-y {
    syntax: "*";
    inherits: false;
    initial-value: 1
}

@property --tw-scale-z {
    syntax: "*";
    inherits: false;
    initial-value: 1
}

@property --tw-rotate-x {
    syntax: "*";
    inherits: false
}

@property --tw-rotate-y {
    syntax: "*";
    inherits: false
}

@property --tw-rotate-z {
    syntax: "*";
    inherits: false
}

@property --tw-skew-x {
    syntax: "*";
    inherits: false
}

@property --tw-skew-y {
    syntax: "*";
    inherits: false
}

@property --tw-space-y-reverse {
    syntax: "*";
    inherits: false;
    initial-value: 0
}

@property --tw-space-x-reverse {
    syntax: "*";
    inherits: false;
    initial-value: 0
}

@property --tw-divide-y-reverse {
    syntax: "*";
    inherits: false;
    initial-value: 0
}

@property --tw-border-style {
    syntax: "*";
    inherits: false;
    initial-value: solid
}

@property --tw-gradient-position {
    syntax: "*";
    inherits: false
}

@property --tw-gradient-from {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000
}

@property --tw-gradient-via {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000
}

@property --tw-gradient-to {
    syntax: "<color>";
    inherits: false;
    initial-value: #0000
}

@property --tw-gradient-stops {
    syntax: "*";
    inherits: false
}

@property --tw-gradient-via-stops {
    syntax: "*";
    inherits: false
}

@property --tw-gradient-from-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 0%
}

@property --tw-gradient-via-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 50%
}

@property --tw-gradient-to-position {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 100%
}

@property --tw-leading {
    syntax: "*";
    inherits: false
}

@property --tw-font-weight {
    syntax: "*";
    inherits: false
}

@property --tw-tracking {
    syntax: "*";
    inherits: false
}

@property --tw-ordinal {
    syntax: "*";
    inherits: false
}

@property --tw-slashed-zero {
    syntax: "*";
    inherits: false
}

@property --tw-numeric-figure {
    syntax: "*";
    inherits: false
}

@property --tw-numeric-spacing {
    syntax: "*";
    inherits: false
}

@property --tw-numeric-fraction {
    syntax: "*";
    inherits: false
}

@property --tw-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000
}

@property --tw-shadow-color {
    syntax: "*";
    inherits: false
}

@property --tw-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%
}

@property --tw-inset-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000
}

@property --tw-inset-shadow-color {
    syntax: "*";
    inherits: false
}

@property --tw-inset-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%
}

@property --tw-ring-color {
    syntax: "*";
    inherits: false
}

@property --tw-ring-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000
}

@property --tw-inset-ring-color {
    syntax: "*";
    inherits: false
}

@property --tw-inset-ring-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000
}

@property --tw-ring-inset {
    syntax: "*";
    inherits: false
}

@property --tw-ring-offset-width {
    syntax: "<length>";
    inherits: false;
    initial-value: 0
}

@property --tw-ring-offset-color {
    syntax: "*";
    inherits: false;
    initial-value: #fff
}

@property --tw-ring-offset-shadow {
    syntax: "*";
    inherits: false;
    initial-value: 0 0 #0000
}

@property --tw-outline-style {
    syntax: "*";
    inherits: false;
    initial-value: solid
}

@property --tw-blur {
    syntax: "*";
    inherits: false
}

@property --tw-brightness {
    syntax: "*";
    inherits: false
}

@property --tw-contrast {
    syntax: "*";
    inherits: false
}

@property --tw-grayscale {
    syntax: "*";
    inherits: false
}

@property --tw-hue-rotate {
    syntax: "*";
    inherits: false
}

@property --tw-invert {
    syntax: "*";
    inherits: false
}

@property --tw-opacity {
    syntax: "*";
    inherits: false
}

@property --tw-saturate {
    syntax: "*";
    inherits: false
}

@property --tw-sepia {
    syntax: "*";
    inherits: false
}

@property --tw-drop-shadow {
    syntax: "*";
    inherits: false
}

@property --tw-drop-shadow-color {
    syntax: "*";
    inherits: false
}

@property --tw-drop-shadow-alpha {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 100%
}

@property --tw-drop-shadow-size {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-blur {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-brightness {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-contrast {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-grayscale {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-hue-rotate {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-invert {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-opacity {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-saturate {
    syntax: "*";
    inherits: false
}

@property --tw-backdrop-sepia {
    syntax: "*";
    inherits: false
}

@property --tw-duration {
    syntax: "*";
    inherits: false
}

@property --tw-ease {
    syntax: "*";
    inherits: false
}

@property --tw-content {
    syntax: "*";
    inherits: false;
    initial-value: ""
}

@keyframes spin {
    to {
        transform: rotate(360deg)
    }
}

@keyframes pulse {
    50% {
        opacity: .5
    }
}